#include "cfaultscommonprocess.h"
#include "CGlobal.h"
#include "DataBuffer.h"
#include <qdatetime.h>
#include <qapplication.h>
#include <fstream>
#include "CPage.h"
#include <qdebug.h>

extern vector<CPage*>  g_PageVec;

CFaultsCommonProcess::CFaultsCommonProcess()
{
}

ST_HISTORY_FAULTS_LIST g_historyFaultsList;
ST_HISTORY_CONDITION_FILTER g_historyConditionFilter;
ST_REALTIME_CONDITION_FILTER g_realTimeConditionFilter;

//ST_DATETIME g_realtime_faults_datetime_array[1500];

int g_RealTimeFaultsNum = 0;

ST_FAULT_INFO g_faultsinforom[] =
{
    {0x1101,QSTR("制动半列都不在线"),                             QSTR("请检查BCU硬件及相应接线")},
    {0x1201,QSTR("显示屏通信中断"),                               QSTR("请检查显示屏硬件及相应接线")},
    {0x120B,QSTR("无法与CCU建立通信，请按复位CCU按钮"),             QSTR("请检查显示屏网关MVB通信状态和通信线缆是否松动或断开。")},
    {0x1202,QSTR("TCU通信中断"),                                 QSTR("请检查TCU硬件及相应接线")},
    {0x1203,QSTR("ACU通信中断"),                                 QSTR("司机：建议使用辅助逆变器备用模式")},
    {0x1204,QSTR("BCU通信中断"),                                 QSTR("请检查BCU硬件及相应接线")},
    {0x1205,QSTR("门通信中断"),                                  QSTR("请检查门硬件或相应接线")},
    {0x1206,QSTR("空调通信中断"),                                QSTR("请检查空调MVB网关硬件或相应接线")},
    {0x1207,QSTR("PA通信中断"),                                 QSTR("请检查PA硬件或相应接线")},
    {0x1208,QSTR("ATC通信中断"),                                 QSTR("请检查ATC硬件及相应接线")},
    {0x1209,QSTR("FAS通信中断"),                                 QSTR("请检查FAS硬件及相应接线")},
    {0x1210,QSTR("从CCU离线"),                    QSTR("司机：请关注主机状态，若主机出现故障，建议照网络故障进行处理")},
    {0x1211,QSTR("主CCU离线，主从切换"),              QSTR("司机：主CCU离线，切至从CCU对运行无影响")},


    {0x1301,QSTR("IO网关通信中断"),                            QSTR("请检查IO网关硬件或相应接线")},
    {0x1302,QSTR("DI1通信中断"),               QSTR("请检查DI1硬件或相应接线（如果为TC车故障，建议重启RIOM空开）")},
    {0x1303,QSTR("DI2通信中断"),                                QSTR("请检查DI2硬件及相应接线")},
    {0x1304,QSTR("DI3通信中断"),                                QSTR("请检查DI3硬件及相应接线")},
    {0x1305,QSTR("DI4通信中断"),                                QSTR("请检查DI4硬件及相应接线")},
    {0x1306,QSTR("DO1通信中断"),               QSTR("请检查DO1硬件及相应接线")},
    {0x1307,QSTR("DO2通信中断"),                                QSTR("请检查DO2硬件及相应接线")},
    {0x1308,QSTR("AX通信中断"),                                QSTR("请检查AX硬件及相应接线")},
    {0x1309,QSTR("PWM通信中断"),                                QSTR("请检查PWM硬件及相应接线")},

//    {0x2101,QSTR("1侧车门开/关列车线路故障"),                      QSTR("请检查1侧车门开和关按钮。通知OCC")},
//    {0x2102,QSTR("2侧车门开/关列车线路故障"),                      QSTR("请检查2侧车门开和关按钮。通知OCC")},
//    {0x2103,QSTR("超速检测"),                                   QSTR("ATP旁路条件下的检测到超速。请司机施加制动。")},
//    {0x2301,QSTR("所有制动缓解列车线故障"),                        QSTR("检查相应DI线")},
//    {0x2302,QSTR("紧急制动命令列车线故障"),                        QSTR("检查相应DI线")},
//    {0x2303,QSTR("ATP输出最大常用制动指令列车线故障"),               QSTR("检查相应DI线")},
//    {0x2304,QSTR("主牵引建立环路列车线故障"),                       QSTR("检查相应DI线")},
//    {0x2305,QSTR("牵引指令列车线故障"),                           QSTR("检查相应DI线")},
//    {0x2306,QSTR("制动指令列车线故障"),                           QSTR("检查相应DI线")},
//    {0x2307,QSTR("CCU人工复位列车线故障"),                        QSTR("检查相应DI线")},
//    {0x2308,QSTR("授权关闭HSCB列车线故障"),                       QSTR("检查相应DI线")},
//    {0x2309,QSTR("紧急制动环路列车线故障"),                        QSTR("检查相应DI线")},
//    {0x230A,QSTR("牵引系统复位列车线故障"),                        QSTR("检查相应DI线")},
//    {0x230B,QSTR("保持制动命令列车线故障"),                        QSTR("检查相应DI线")},
//    {0x230C,QSTR("施加停放制动命令列车线故障"),                     QSTR("检查相应DI线")},
//    {0x230D,QSTR("缓解停放制动命令列车线故障"),                     QSTR("检查相应DI线")},
    {0x3101,QSTR("两个驾驶室都被占用"),                           QSTR("先确定尾端司机室激活钥匙在关闭位；尝试换头操作\n建议停车重启RIOM空开")},
    {0x3102,QSTR("钥匙信号与方向指令冲突"),                       QSTR("请将方向手柄操作至0位置，再试验\n建议停车重启RIOM空开")},
    {0x3103,QSTR("方向前后指令冲突"),                            QSTR("请将方向手柄操作至0位置，再试验\n建议停车重启RIOM空开")},
    {0x3104,QSTR("方向指令与牵引制动指令冲突"),                   QSTR("请将牵引手柄移动到紧急制动位置。请将方向手柄操作至0位置，再试验\n建议停车重启RIOM空开")},
    {0x3105,QSTR("牵引指令与制动指令冲突（硬线）"),                QSTR("将司控器手柄移到惰行位置\n建议停车重启RIOM空开")},
    {0x3106,QSTR("牵引指令列车线故障（硬线）"),                          QSTR("请检查对应信号的列车线")},
    {0x3107,QSTR("制动指令列车线故障（硬线）"),                          QSTR("请检查对应信号的列车线")},
    {0x3108,QSTR("紧急制动安全环路列车线故障（硬线）"),                   QSTR("请检查对应信号的列车线")},
    {0x3201,QSTR("两个TC车DI1都不在线"),                        QSTR("TCMS无法控制牵引制动，请切换到备用模式")},
    {0x3202,QSTR("两个TC车DO1都不在线"),                        QSTR("TCMS无法给空压机输出启动命令，请用手动方式给空压机强迫泵风")},

    {0x4101,QSTR("制动大故障"),                                 QSTR("制动指令与制动缸压力不符或停放制动不缓解时会报。单台车，建议下一站清人")},
    {0x4102,QSTR("转向架1制动不缓解"),                           QSTR("司机：建议关断B05缓解塞门\n检修：检查气路、阀状态；更换EP2002阀")},
    {0x4103,QSTR("转向架2制动不缓解"),                           QSTR("司机：建议关断B05缓解塞门\n检修：检查气路、阀状态；更换EP2002阀")},

    {0x4104,QSTR("停放制动不缓解"),                              QSTR("司机：建议按单节车停放制动不缓解处理，短接停放制动旁路")},
//  {0x4105,QSTR("3个以上转向架紧急制动无效"),                     QSTR("下个合适地点停车")},
    {0x4106,QSTR("3个以上转向架BCP压力低"),                       QSTR("司机：确认总风压力＞7.5bar，建议立即清人掉线。")},
    {0x4107,QSTR("3个以上隔离转向架"),                         QSTR("司机：确认HMI上显示四个及以上转向架被隔离，建议立即清人掉线")},
    {0x4108,QSTR("3个以上转向架常用制动不能施加故障"),               QSTR("司机：建议立即清人掉线")},
    // {0x4201,QSTR("制动中级故障"),                                QSTR("完成本圈运营后停车")},
    {0x4202,QSTR("转向架1空气簧压力超出范围"),                     QSTR("司机：终点站掉线，若有漏风现象，视情况处理。\n检修：回库检查是否有漏风现象，预防性更换EP2002阀。")},
    {0x4203,QSTR("转向架2空气簧压力超出范围"),                     QSTR("司机：建议终点站掉线，若有漏风现象，视情况处理。\n检修：回库检查是否有漏风现象，预防性更换EP2002阀。")},
//    {0x4204,QSTR("转向架1紧急制动无效"),                          QSTR("建议限速95km/h")},
//    {0x4205,QSTR("转向架2紧急制动无效"),                          QSTR("建议限速95km/h")},
    {0x4206,QSTR("2或3个BCP压力低"),                            QSTR("司机：建议限速95kmh，终点站掉线")},
    {0x4207,QSTR("2个或3个转向架常用制动不能施加故障"),             QSTR("司机：建议限速95kmh，终点站掉线")},
    {0x4208,QSTR("2个或3个B05隔离转向架"),                       QSTR("司机：建议限速95kmh，终点站掉线")},
    // {0x4301,QSTR("minor故障"),                                 QSTR("完成本天运营后回库")},
    {0x4302,QSTR("MVB总线故障"),                                QSTR("司机：1.不是所有的诊断数据均可获得，2.注意硬线的诊断数据；\n维修人员：1.检查MVB线，2.检查TCMS，3.如果必要换EP2002阀")},
    {0x4303,QSTR("转向架1,BCP压力低"),                            QSTR("司机：建议终点站掉线")},
    {0x4304,QSTR("转向架2,BCP压力低"),                            QSTR("司机：建议终点站掉线")},
    {0x4305,QSTR("自检测间断26小时"),                            QSTR("自检")},
    {0x4306,QSTR("电制动超出范围"),                               QSTR("检修：可能过制动、热过载\n检查信号线、TCU或更换EP2002")},
    {0x4307,QSTR("制动力超出范围"),                               QSTR("检查PWM信号是否完全故障\n检查PWM列车线、PWM发生器或更换EP2002")},
 //   {0x4308,QSTR("主风管压力传感器故障"),                          QSTR("司机无操作指南；\n维修人员：1.检查阀的状态，2.若果有必要，换EP2002阀。")},
    {0x4309,QSTR("轴1速度传感器故障"),                            QSTR("在轨轮低黏着力时可使用低减速度。\n检查速度传感器及硬线；检查阀状态或更换EP2002阀")},
    {0x4310,QSTR("轴2速度传感器故障"),                            QSTR("在轨轮低黏着力时可使用低减速度。\n检查速度传感器及硬线；检查阀状态或更换EP2003阀")},
    {0x4311,QSTR("轴3速度传感器故障"),                            QSTR("在轨轮低黏着力时可使用低减速度。\n检查速度传感器及硬线；检查阀状态或更换EP2004阀")},
    {0x4312,QSTR("轴4速度传感器故障"),                            QSTR("在轨轮低黏着力时可使用低减速度。\n检查速度传感器及硬线；检查阀状态或更换EP2005阀")},
    {0x4313,QSTR("WSP保持"),                                    QSTR("在轨轮低黏着力时可使用低减速度。\n自检；检查速度传感器及硬线；检查制动执行器的机械状况；检查阀状态或更换EP2002阀")},
    {0x4314,QSTR("B05.01隔离转向架1"),                           QSTR("司机：建议终点站掉线")},
    {0x4315,QSTR("B05.02隔离转向架2"),                           QSTR("司机：建议终点站掉线")},
    {0x4316,QSTR("牵引力不足导致TCMS无法缓解保持制动"),        QSTR("司机：建议手柄回惰行后直接推牵引3级或4级并保持3秒。")},
    {0x4317,QSTR("牵引力不足导致TCMS无法缓解保持制动"),      QSTR("司机：建议手柄回惰行后直接推牵引3级或4级并保持3秒。")},
    {0x4318,QSTR("TCMS发出保持制动缓解指令，保持制动未缓解"),        QSTR("司机：建议按住强缓推牵引级位，尝试运行。")},
    {0x4319,QSTR("主风管压力传感器1故障"),                           QSTR("检查阀状态或更换EP2002阀")},
    {0x4320,QSTR("主风管压力传感器2故障"),                           QSTR("检查阀状态或更换EP2002阀")},
    {0x4321,QSTR("主风管压力传感器3故障"),                           QSTR("检查阀状态或更换EP2002阀")},
    {0x4322,QSTR("主风管压力传感器4故障"),                           QSTR("检查阀状态或更换EP2002阀")},

    {0x5101, QSTR("4个或以上牵引系统无效"),                QSTR("司机：建议尝试按复位按钮，若无效立即清人掉线")},
    {0x5201,QSTR("TCU锁闭"),                                    QSTR("司机：不可复位")},
    // {0x5202,QSTR("严重故障"),                                    QSTR("本车牵引消失。检查本车牵引系统")},
    {0x5203,QSTR("TCU隔离"),                                    QSTR("司机：建议按复位按钮")},
    // {0x5301,QSTR("中等故障"),                                    QSTR("牵引系统自动复位")},
    // {0x5302,QSTR("轻微故障"),                                    QSTR("牵引系统自动复位")},
    {0x5303,QSTR("AA3故障"),                                     QSTR("检查AA3")},
    {0x5304,QSTR("提供的软件版本不可信"),                          QSTR("导致牵引锁闭，检查TCU版本信息")},
    {0x5305,QSTR("RIOM故障"),                                    QSTR("导致抑制逆变器，重复发生会封锁逆变器，检查RIOM")},
    {0x5306,QSTR("TCMS通信故障"),                                 QSTR("TCMS通信故障，请检查MVB通讯线路")},
    {0x5307,QSTR("AA3温度过低"),                                  QSTR("导致抑制逆变器，重复发生会封锁逆变器，检查AA3")},
    {0x5308,QSTR("AA3二级超温"),                                  QSTR("导致抑制逆变器，重复发生会封锁逆变器，检查AA3")},
    {0x5273, QSTR("TCU DPlug故障"), QSTR("牵引dataplug故障，运营结束检修")},
    {0x5309,QSTR("lcmd1电流传感器故障"),                           QSTR("检查A-LCMD1传感器和低压线路")},
    {0x5310,QSTR("lcmd2电流传感器故障"),                           QSTR("检查A-LCMD2传感器和低压线路")},
    {0x5311,QSTR("电机R相电流传感器A-CMDR故障"),                    QSTR("导致K-IC断开；检查A-CMDR传感器和低压线路")},
    {0x5312,QSTR("电机S相电流传感器A-CMDS故障"),                    QSTR("导致K-IC断开；检查A-CMDS传感器和低压线路")},
    {0x5313,QSTR("FVMD电压传感器故障"),                            QSTR("导致K-IC断开，重复发生会封锁逆变器；\n检查A-FVMD传感器和低压线路")},
    {0x5314,QSTR("LVMD电压传感器故障"),                            QSTR("检查A-LVMD传感器和低压线路")},
    {0x5315,QSTR("滤波电容电压过低"),                              QSTR("检查滤波电容")},
    {0x5316,QSTR("放电电阻R-FL故障"),                              QSTR("检查放电电阻及其线路及部件")},
    {0x5317,QSTR("KCCC闭合失败"),                                  QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n检查K-CCC的辅助触点和低压线路")},
    {0x5318,QSTR("KCCC辅助触点故障"),                              QSTR("检查KCCC辅助触点")},
    {0x5319,QSTR("KCCC断开失败"),                                  QSTR("导致HSCB断开，重复发生会隔离牵引系统；\n检查K-CCC的辅助触点和低压线路")},
    {0x5320,QSTR("充电电阻R-CCZ报警过温"),                          QSTR("检查充电电阻")},
    {0x5321,QSTR("充电电阻R-CCZ二级过温"),                          QSTR("短时间内预充电次数过多")},
    {0x5322,QSTR("预充电时间过长"),                                QSTR("导致HSCB断开，重复发生会隔离牵引系统；\n检查A-FVMD传感器")},
    {0x5323,QSTR("预充电期间发生短路"),                            QSTR("导致HSCB断开，重复发生会隔离牵引系统；\n检查A-FVMD传感器可能直流总线发生短路")},
    {0x5324,QSTR("软撬棒放电故障"),                                QSTR("做加载测试检查斩波功能\n检查高压线路")},
    {0x5325,QSTR("闭合HSCB失败"),                                 QSTR("重复发生会隔离牵引系统；做低压测试检查HSCB；\n检查HSCB的辅助触点和低压线路")},
    {0x5326,QSTR("打开HSCB失败"),                                 QSTR("重复发生会隔离牵引系统；\n检查HSCB")},
    {0x5327,QSTR("HSCB跳闸"),                                    QSTR("重复发生会隔离牵引系统；检查HSCB；\n检查是否高压线路短")},
    {0x5328,QSTR("KIC闭合失败"),                                  QSTR("重复发生会隔离牵引系统；\n做空载测试检查K-IC；\n检查K-IC的辅助触点和低压线路")},
    {0x5329,QSTR("KIC打开失败"),                                  QSTR("导致HSCB断开，重复发生会隔离牵引系统；\n做空载测试检查K-IC\n检查K-IC的辅助触点和低压线路")},
    {0x5330,QSTR("牵引逆变器冷却风扇K-FAN故障"),                    QSTR("导致抑制逆变器，重复发生会隔离牵引；\n检查空开Q-MCB1；\n检查K-FAN及其低压线路")},
    {0x5331,QSTR("无380V中压故障"),                                QSTR("司机：可能导致抑制逆变器，请按照CVS停机故障处理")},
    {0x5332,QSTR("牵引电机警告级过温"),                             QSTR("导致电机功率限制；可能是非常规的驾驶方式造成")},
    {0x5333,QSTR("牵引电机过温故障"),                              QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n可能是非常规的驾驶方式造成")},
    {0x5334,QSTR("逆变器热控开关跳闸"),                            QSTR("逆变器过温，导致K-IC断开，重复发生会隔离牵引系统；\n检查热开关低压线路；检查逆变器风扇；\n可能是非常规的驾驶方式造成")},
    {0x5335,QSTR("逆变器冷却温度传感器故障"),                       QSTR("检查传感器及其低压线路")},
    {0x5336,QSTR("逆变器一级过温警告"),                            QSTR("可能是非常规的驾驶方式造成")},
    {0x5337,QSTR("逆变器过温故障"),                               QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n检查逆变器冷却风扇；\n可能是非常规的驾驶方式造成")},
    {0x5338,QSTR("滤波电感L-FL一级过载警告"),                      QSTR("可能是非常规的驾驶方式造成")},
    {0x5339,QSTR("滤波电感L-FL二级过载"),                          QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n可能是非常规的驾驶方式造成")},
    {0x5340,QSTR("制动电阻过温"),                              QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n检查制动电阻；或许与供电线路不相容")},
    {0x5341,QSTR("列车运行时方向命令改变"),                         QSTR("列车运行时方向命令改变，导致逆变器抑制")},
    {0x5342,QSTR("列车运行方向和命令不一致"),                    QSTR("导致逆变器抑制，重复发生会隔离牵引系统；\n检查速度传感器和低压线路；\n可能是非常规的驾驶方式造成")},
    {0x5343,QSTR("方向列车线冗余失败"),                             QSTR("方向列车线冗余失败\n检查列车线")},
    {0x5344,QSTR("向前、向后方向命令冲突"),                         QSTR("方向命令冲突，导致逆变器抑制/n检查列车线")},
    {0x5345,QSTR("硬线PWM超出范围"),                                QSTR("检查列车线")},
    {0x5346,QSTR("MVB线PWM超出范围"),                              QSTR("MVB线PWM超出范围")},
    {0x5347,QSTR("电机超速"),                                      QSTR("电机速度过高，导致逆变器抑制")},
    {0x5348,QSTR("载荷信号超出范围"),                               QSTR("检查BCU和TCU之间的硬线")},
    {0x5349,QSTR("牵引制动命令不一致"),                             QSTR("牵引、制动命令不一致，导致逆变器抑制\n检查列车线")},
    {0x5350,QSTR("制动电阻短路故障"),                               QSTR("导致HSCB断开，重复发生会隔离牵引系统；\n检查制动电阻")},
    {0x5351,QSTR("电机相电流不平衡"),                                QSTR("导致逆变器抑制，重复发生会隔离牵引系统；\n检查电机接线,A-LCMD1传感器和A-LCMD2传感器")},
    {0x5352,QSTR("LI_DISEB信号故障"),                                QSTR("检查BCU和TCU之间的硬线\n检查BCU继电器输出")},
    {0x5353,QSTR("电机超速警告"),                                 QSTR("列车超速警告")},
    {0x5354,QSTR("超速故障"),                                    QSTR("列车超速故障，导致抑制逆变器")},
    {0x5355,QSTR("电机速度传感器只有一个通道故障"),                 QSTR("检查速度传感器和低压线路")},
    {0x5356,QSTR("电机速度传感器两个通道均故障"),                  QSTR("导致K-IC断开，重复发生会隔离牵引系统；\n检查速度传感器和低压线路")},
    {0x5357,QSTR("轮径校验警告"),                              QSTR("检查车轮直径")},
    {0x5358,QSTR("轮径校验故障"),                                QSTR("导致逆变器抑制，重复发生会隔离牵引系统；\n检查车轮直径")},
    {0x5359,QSTR("输入输出电流不平衡"),                           QSTR("导致逆变器抑制，重复发生会隔离牵引系统；\n检查高压线路（接地漏电）；\n检查A-LCMD1传感器和A-LCMD2传感器")},
    {0x5360,QSTR("线电流高于1300A故障"),                        QSTR("导致逆变器抑制，重复发生会隔离牵引系统")},
    {0x5361,QSTR("线电流高于1400A故障"),                         QSTR("导致HSCB断开，重复发生会隔离牵引系统")},
    {0x5362,QSTR("斩波IGBT故障"),                                QSTR("导致TCU隔离；\n更换逆变器模块")},
    {0x5363,QSTR("逆变器R相故障"),                               QSTR("导致TCU隔离；\n更换逆变器模块")},
    {0x5364,QSTR("逆变器S相故障"),                               QSTR("导致TCU隔离；\n更换逆变器模块")},
    {0x5365,QSTR("逆变器T相故障"),                               QSTR("导致TCU隔离；\n更换逆变器模块")},
    {0x5366,QSTR("电机电流超过2200A故障"),                      QSTR("导致逆变器抑制，重复发生会隔离牵引系统")},
    {0x5367,QSTR("电机相电流高于2400A故障"),                     QSTR("导致HSCB断开，重复发生会隔离牵引系统")},
    {0x5368,QSTR("滤波电压高于2050V故障"),                       QSTR("线电压过压，启动软撬棒")},
    {0x5369,QSTR("滤波电压高于2150V故障"),                       QSTR("导致逆变器抑制，重复发生会隔离牵引系统")},
    {0x5370,QSTR("滤波电压高于2250V故障"),                        QSTR("导致HSCB断开，重复发生会隔离牵引系统")},
    {0x5371,QSTR("F-AUX故障"),                      QSTR("本地CVS保险丝F-AUX熔断，更换F-AUX")},
    {0x5372,QSTR("F-AUXBUS故障"),                QSTR("保险丝F-AUXBUS熔断，更换F-AUXBUS")},
//    {0x5373,QSTR("硬线传送的PWM信号超出范围FLT_inv_eff_hard"),           QSTR("无")},
//    {0x5374,QSTR("MVB传送的PWM值超出范围FLT_inv_eff_tcms"),             QSTR("无")},
//    {0x5375,QSTR("载荷信号故障FLT_inv_lw_hard"),                       QSTR("载荷信号故障\n检查BCU和TCU之间的硬线")},
//    {0x5376,QSTR("AO_BEA信号传输故障FLT_inv_bea_hard"),                QSTR("AO_BEA信号传输故障\n检查BCU和TCU之间的硬线")},
//    {0x5377,QSTR("LI_DISEB信号故障FLT_inv_diseb_hard"),               QSTR("LI_DISEB信号故障\n检查BCU和TCU之间的硬线\n检查BCU继电器输出")},
//    {0x5378,QSTR("3个以上锁闭或隔离或者不在线变为1级故障"),                 QSTR("3个或以上牵引系统失去控制\n请检查牵引系统或者通信线路完好。")},

//    {0x6101,QSTR("两个辅助系统失去控制"),                                QSTR("请检查辅助系统或者通信线路完好。请将司机控制台上CVS控制开关拨到“备用”")},
//    {0x6102,QSTR("至少一个重大故障存在"),                                QSTR("故障发生时相应的CVS已停止工作。维修人员需检修ACU控制单元和辅助变流器。\n如故障不能解决，需及时进行更换")},
    {0x6101,QSTR("复位太频繁"),                                        QSTR("司机：无需复位；有扩展供电建议终点站掉线，无扩展供电建议立刻清人；两台同时故障建议立即清人入库")},
    {0x6102,QSTR("短路交流 输出未隔离"),                                QSTR("司机：无需复位；一台故障建议立刻清人；两台同时故障建议立即清人入库\n检修：可能是由于三相输出的辅助逆变器外发生的短路或线路故障造成的")},
    {0x6201,QSTR(" 输入模块永久性故障"),                                QSTR("司机：建议尝试CVS复位试验")},
    {0x6202,QSTR("逆变器不能使用"),                                     QSTR("司机：建议尝试CVS复位试验")},
    {0x6203,QSTR("交流输出模块永久性故障"),                              QSTR("司机：建议尝试CVS复位试验")},
    {0x6204,QSTR("电池充电器模块停止工作"),                              QSTR("司机：建议尝试CVS复位试验")},
    {0x6205,QSTR("预充电太频繁,十分钟后请复位CVS"),                       QSTR("司机：建议尝试CVS复位试验")},
   // {0x6207,QSTR("TCMS通信故障"),                                     QSTR("TCMS通信故障，请检查MVB通讯线路")},
   // {0x6208,QSTR("至少一个中等故障存在"),                                  QSTR("故障发生时CVS已停止工作。司机通过显示屏按下复位可复位故障按钮或重新启动ACU控制单元来清除该故障。")},
    {0x6301,QSTR("输入模块过压-阈值1"),                              QSTR("故障发生时暂停逆变器和蓄电池充电器的操作。司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，司机可通过更换ACU来清除故障。\n如果操作后依然未能使清除故障，司机需要更换LVMD并重置ACU来清除故障。")},
    {0x6302,QSTR("输入模块过压-阈值2"),                              QSTR("故障发生时暂停逆变器和蓄电池充电器的操作，断开输入接触器(LIK、CCK)，并在故障取消时自动恢复。\n司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。\n如果操作后依然未能使清除故障，维修人员需要更换LVMD并重置ACU来清除故障。")},
    {0x6303,QSTR("输入模块过压-阈值3"),                              QSTR("司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换LVMD并重置ACU来清除故障。")},
    {0x6304,QSTR("输入模块快速欠压"),                                   QSTR("司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后未能使清除故障，维修人员需要更换LVMD并重置ACU来清除故障。\n如果操作后依然未能使清除故障，维修人员需要检查逆变器和预充电电阻器。")},
    {0x6305,QSTR("输入模块慢速欠压"),                                   QSTR("司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后未能使清除故障，维修人员需要更换LVMD并重置ACU来清除故障。\n如果操作后依然未能使清除故障，维修人员需要检查逆变器和预充电电阻器。")},
    {0x6306,QSTR("在没有停止命令时IES断开"),                                QSTR("司机：两台CVS均停止工作，建议请立即清人掉线  ")},

    {0x6307,QSTR("主接触器 (LIK) 状态不一致"),                      QSTR("司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查LIK是否正常连接，如已正常连接，维修人员可通过更换LIK来清除故障。如果操作后依然未能使清除故障，\n维修人员可通过更换ACU并重新启动来清除故障")},
    {0x6308,QSTR("预充电接触器(CCK) 状态不一致"),                      QSTR("司机可通过重置ACU使辅助变流器重启来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查CCK是否正常连接，如已正常连接，维修人员可通过更换CCK来清除故障。如果操作后依然未能使清除故障，\n维修人员可通过更换ACU并重新启动来清除故障")},
    {0x6309,QSTR("输入自有热图像故障(电感LFL过温)"),                      QSTR("司机：一台CVS故障，且无法进行扩展供电，建议立即清人-x、AOCMD板和蓄电池充电器模块来清除故障。\n如果操作后依然未能使清除故障，维修人员需检查整体布线")},
    {0x630A,QSTR("逆变器模块中L1相IGBT故障"),                           QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x630B,QSTR("逆变器模块中L2相IGBT故障"),                           QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x630C,QSTR("逆变器模块中L3相IGBT故障"),                           QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x630D,QSTR("逆变器模块中L1相过流故障"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x630E,QSTR("逆变器模块中L2相过流故障"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x630F,QSTR("逆变器模块中L3相过流故障"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
   //{0x6310,QSTR("逆变器热图像故障"),                                   QSTR("由于此故障的原因在于过热，因此为了保护过热的部件，应充分冷却后再重新启动辅助变流器")},
    {0x6311,QSTR("逆变器电流失衡"),                                     QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查是否单相负载过多，如果不是此类原因，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要更换变流器电源模块来清除故障。")},
    {0x6312,QSTR("变压器热图像故障"),                                    QSTR("司机：一台CVS故障，且无法进行扩展供电，建议立即清人")},
    {0x6313,QSTR("交流输出过电压-快速案例"),                              QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
    {0x6314,QSTR("交流输出过电压-慢速案例"),                              QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
    {0x6315,QSTR("逆变模式下，交流输出过电压-快速案例"),                    QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
    {0x6316,QSTR("逆变模式下，交流输出过电压-慢速案例"),                    QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
    {0x6317,QSTR("正常模式下交流输出电压不一致"),                          QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查电压传感器以及输出模块是否出现问题")},
    {0x6318,QSTR("逆变模式下交流输出电压不一致"),                          QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查电压传感器以及输出模块是否出现问题")},
    {0x6319,QSTR("交流输出过电流"),                                     QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查电流传感器以及输出模块是否出现问题")},
    {0x631A,QSTR("正常模式下交流输出过载"),                               QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查电流传感器以及输出模块是否出现问题")},
    {0x631B,QSTR("逆变模式下交流输出过载"),                               QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查电流传感器以及输出模块是否出现问题")},
    {0x631C,QSTR("AOIK闭合或打开故障"),                           QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查AOIK接触器是否出现粘连")},
    {0x631D,QSTR("逆变器风扇故障"),                                     QSTR("维修人员检查风扇断路器是否真的跳闸，如确实跳闸需检修风扇")},
    {0x631E,QSTR("交流输出模块相接地故障"),                               QSTR("司机：一台CVS故障，且无法进行扩展供电，建议立即清人")},
    {0x631F,QSTR("气流低位检测"),                                         QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员需检查蓄电池充电器模块和LVMD")},
    {0x6321,QSTR("电池充电器IGBT故障相L1"),                             QSTR("这通常表示由于短路造成此IGBT“去饱和”。司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员可更换蓄电池充电器模块")},
    {0x6322,QSTR("电池充电器IGBT故障相L2"),                             QSTR("这通常表示由于短路造成此IGBT“去饱和”。司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员可更换蓄电池充电器模块")},
    {0x6323,QSTR("电池充电器IGBT故障相L3"),                             QSTR("这通常表示由于短路造成此IGBT“去饱和”。司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员可更换蓄电池充电器模块")},
    {0x6324,QSTR("电池充电器输入过电流相L1"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换蓄电池充电器模块。如果故障依然未清除，维修人员检查是否是辅助变流器外部短路")},
    {0x6325,QSTR("电池充电器输入过电流相L2"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换蓄电池充电器模块。如果故障依然未清除，维修人员检查是否是辅助变流器外部短路")},
    {0x6326,QSTR("电池充电器输入过电流相L3"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换蓄电池充电器模块。如果故障依然未清除，维修人员检查是否是辅助变流器外部短路")},
    {0x6327,QSTR("电池充电器输入过载"),                                 QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换蓄电池充电器模块。如果故障依然未清除，维修人员检查是否是线路是否出现问题")},
    {0x6328,QSTR("电池慢速过压"),                                      QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换ACU")},
    {0x6329,QSTR("电池快速过压"),                                      QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，\n维修人员可更换ACU")},
    {0x632A,QSTR("电池欠压-阈值1"),                                      QSTR("司机在正常模式下启动再启动一次蓄电池充电器，如果不正常，建议维修人员更换蓄电池充电器模块")},
    {0x632B,QSTR("电池欠压-阈值2"),                                      QSTR("司机在正常模式下启动再启动一次蓄电池充电器，如果不正常，建议维修人员更换蓄电池充电器模块")},
    {0x632C,QSTR("电池温度超出范围-案例1"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池出现的问题")},
    {0x632D,QSTR("电池温度超出范围-案例2"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池出现的问题")},
    {0x632E,QSTR("电池充电电流不平衡"),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员可更换蓄电池充电器并检查线路")},
    {0x632F,QSTR("逆变器热图像故障"),                                  QSTR("司机：一台CVS故障，且无法进行扩展供电，建议立即清人")},
    {0x6331,QSTR("逆变模式下，电池充电器热图像故障"),                    QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
    {0x6332,QSTR("在正常模式下，电池充电器电压测量不一致"),               QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。\n如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
    {0x6333,QSTR("TCMS通信故障"),                                     QSTR("TCMS通信故障，请检查MVB通讯线路")},
    {0x6334,QSTR("24V模块无输出"),                                     QSTR("请检查24V模块硬件及相应接线")},
    {0x6230, QSTR("ACU DPlug故障"), QSTR("辅助dataplug故障，运营结束检修")},

//    {0x6313,QSTR("交流输出过电压-快速案例"),                              QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
//    {0x6314,QSTR("交流输出过电压-慢速案例"),                              QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
//    {0x6315,QSTR("AOIK闭合或打开故障"),                                 QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查AOIK接触器是否出现粘连")},
//    {0x6316,QSTR("逆变模式下，交流输出过电压-快速案例"),                    QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
//    {0x6317,QSTR("逆变模式下，交流输出过电压-慢速案例"),                    QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员可通过更换ACU来清除故障。如果操作后依然未能使清除故障，维修人员需要检查电压传感器及线路是否出现问题。")},
//    {0x6318,QSTR("正常模式下交流输出电压不一致"),                          QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查电压传感器以及输出模块是否出现问题")},
//    {0x6319,QSTR("逆变模式下交流输出电压不一致"),                          QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查电压传感器以及输出模块是否出现问题")},
//    {0x631A,QSTR("正常模式下交流输出过载"),                               QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查电流传感器以及输出模块是否出现问题")},
//    {0x631B,QSTR("逆变模式下交流输出过载"),                               QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查电流传感器以及输出模块是否出现问题")},
//    {0x631C,QSTR("交流输出过电流"),                                     QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查电流传感器以及输出模块是否出现问题")},
//     {0x632B,QSTR("至少一个低级别故障存在"),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x632C,QSTR("变压器热图像故障"),                                      QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x632E,QSTR("预充电太频繁"),                            QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x6331,QSTR("在没有停止命令时IES断开"),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x6332,QSTR("牵引检测到高压，预充电接触器闭合并且滤波电压低"),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x6333,QSTR("预充电接触器闭合在没有高压输入 (通过传感器LVMD测量)"),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},
//    {0x6334,QSTR("如果辅助逆变器接到命令在开始的模式(Cstop是0) "),                                QSTR("司机可通过重置ACU使辅助变流器重新启动来清除该故障。如果操作后辅助系统未能恢复正常工作，维修人员需检查蓄电池充电器模块和LVMD")},

    {0x7101,QSTR("内部485故障"), QSTR("司机：车门显示不正确，建议司机对显示不正确的车门进行隔离\n检修：收不到本节车所有车门485数据，本节车的状态和故障无法检测。检查本节车485网络。")},
    {0x7111,QSTR("门1锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7121,QSTR("门2锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7131,QSTR("门3锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7141,QSTR("门4锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7151,QSTR("门5锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7161,QSTR("门6锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7171,QSTR("门7锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7181,QSTR("门8锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7191,QSTR("门9锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x71A1,QSTR("门10锁闭失败"), QSTR("司机：建议进行再开闭试验后若无效则进行车门隔离\n检修：对锁闭行程开关进行检查，对门控器进行检查")},
    {0x7112,QSTR("门1意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7122,QSTR("门2意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7132,QSTR("门3意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7142,QSTR("门4意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7152,QSTR("门5意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7162,QSTR("门6意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7172,QSTR("门7意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7182,QSTR("门8意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x7192,QSTR("门9意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},
    {0x71A2,QSTR("门10意外解锁"), QSTR("司机：建议立即隔离故障车门\n检修：检查DLS行程开关及EDCU是否存在故障")},

    {0x7113,QSTR("门1严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7123,QSTR("门2严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7133,QSTR("门3严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7143,QSTR("门4严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7153,QSTR("门5严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7163,QSTR("门6严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7173,QSTR("门7严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7183,QSTR("门8严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7193,QSTR("门9严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x71A3,QSTR("门10严重错误"), QSTR("司机:建议对故障车门进行隔离操作\n检修：更换门控器进行试验，若故障未消除，联系厂家")},
    {0x7211,QSTR("门1电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7221,QSTR("门2电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7231,QSTR("门3电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7241,QSTR("门4电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7251,QSTR("门5电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7261,QSTR("门6电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7271,QSTR("门7电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7281,QSTR("门8电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x7291,QSTR("门9电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
    {0x72A1,QSTR("门10电动机电路故障"),             QSTR("司机：建议对故障车门进行隔离操作\n检修：对门电机及控制电路进行检查")},
//    {0x7212,QSTR("门1DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7222,QSTR("门2DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7232,QSTR("门3DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7242,QSTR("门4DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7252,QSTR("门5DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7262,QSTR("门6DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7272,QSTR("门7DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7282,QSTR("门8DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x7292,QSTR("门9DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
//    {0x72A2,QSTR("门10DCU失效"),                                    QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：检查EDCU和电机的电路，接线。")},
    {0x7212,QSTR("门1DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7222,QSTR("门2DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7232,QSTR("门3DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7242,QSTR("门4DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7252,QSTR("门5DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7262,QSTR("门6DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7272,QSTR("门7DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7282,QSTR("门8DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7292,QSTR("门9DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x72A2,QSTR("门10DLS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},

    {0x7213,QSTR("门1DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7223,QSTR("门2DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7233,QSTR("门3DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7243,QSTR("门4DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7253,QSTR("门5DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7263,QSTR("门6DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7273,QSTR("门7DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7283,QSTR("门8DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7293,QSTR("门9DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},
    {0x72A3,QSTR("门10DCS失效"),                                    QSTR("司机：建议对故障车门进行隔离操作")},

//    {0x7216,QSTR("门1意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7226,QSTR("门2意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7236,QSTR("门3意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7246,QSTR("门4意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7256,QSTR("门5意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7266,QSTR("门6意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7276,QSTR("门7意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7286,QSTR("门8意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x7296,QSTR("门9意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
//    {0x72A6,QSTR("门10意外解锁"),                            QSTR("司机提示：请将此故障门隔离并且关闭好。维护提示：DCU 驱动电磁铁电路故障,检查DCU。")},
    {0x7311,QSTR("门1硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7321,QSTR("门2硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7331,QSTR("门3硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7341,QSTR("门4硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7351,QSTR("门5硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7361,QSTR("门6硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7371,QSTR("门7硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7381,QSTR("门8硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7391,QSTR("门9硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x73A1,QSTR("门10硬件次要故障"),                                     QSTR("司机：建议对故障车门进行隔离操作")},
    {0x7312,QSTR("门1关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7322,QSTR("门2关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7332,QSTR("门3关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7342,QSTR("门4关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7352,QSTR("门5关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7362,QSTR("门6关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7372,QSTR("门7关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7382,QSTR("门8关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7392,QSTR("门9关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x73A2,QSTR("门10关门障碍物探测"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7313,QSTR("门1开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7323,QSTR("门2开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7333,QSTR("门3开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7343,QSTR("门4开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7353,QSTR("门5开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7363,QSTR("门6开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7373,QSTR("门7开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7383,QSTR("门8开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7393,QSTR("门9开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x73A3,QSTR("门10开门障碍物探测"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},

    {0x7314,QSTR("门1外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7324,QSTR("门2外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7334,QSTR("门3外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7344,QSTR("门4外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7354,QSTR("门5外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7364,QSTR("门6外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7374,QSTR("门7外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7384,QSTR("门8外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x7394,QSTR("门9外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},
    {0x73A4,QSTR("门10外部指示灯供电故障"),                         QSTR("司机：仅是外部侧墙灯故障与实际车门状态无关，建议不用进行相关操作，故障消失，自动恢复")},

    {0x7315,QSTR("门1门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7325,QSTR("门2门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7335,QSTR("门3门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7345,QSTR("门4门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7355,QSTR("门5门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7365,QSTR("门6门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7375,QSTR("门7门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7385,QSTR("门8门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7395,QSTR("门9门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x73A5,QSTR("门10门关闭/打开中指示灯供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7316,QSTR("门1内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7326,QSTR("门2内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7336,QSTR("门3内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7346,QSTR("门4内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7356,QSTR("门5内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7366,QSTR("门6内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7376,QSTR("门7内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7386,QSTR("门8内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7396,QSTR("门9内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x73A6,QSTR("门10内部指示灯供电故障"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7317,QSTR("门1蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7327,QSTR("门2蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7337,QSTR("门3蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7347,QSTR("门4蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7357,QSTR("门5蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7367,QSTR("门6蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7377,QSTR("门7蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7387,QSTR("门8蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7397,QSTR("门9蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x73A7,QSTR("门10蜂鸣器供电故障"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7318,QSTR("门1开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7328,QSTR("门2开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7338,QSTR("门3开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7348,QSTR("门4开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7358,QSTR("门5开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7368,QSTR("门6开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7378,QSTR("门7开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7388,QSTR("门8开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7398,QSTR("门9开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x73A8,QSTR("门10开门超时"),                         QSTR("维护提示：DCU 驱动开门指示灯故障, 检查DCU。")},
    {0x7319,QSTR("门1关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7329,QSTR("门2关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7339,QSTR("门3关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7349,QSTR("门4关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7359,QSTR("门5关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7369,QSTR("门6关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7379,QSTR("门7关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7389,QSTR("门8关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x7399,QSTR("门9关门超时"),                            QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},
    {0x73A9,QSTR("门10关门超时"),                           QSTR("维护提示：DCU 驱动门侧灯故障, 检查DCU。")},

    // added by Deng Ran on the 6th of March 2015.
    {0x731A, QSTR("门1电磁铁故障"), QSTR("待定")},
    {0x732A, QSTR("门2电磁铁故障"), QSTR("待定")},
    {0x733A, QSTR("门3电磁铁故障"), QSTR("待定")},
    {0x734A, QSTR("门4电磁铁故障"), QSTR("待定")},
    {0x735A, QSTR("门5电磁铁故障"), QSTR("待定")},
    {0x736A, QSTR("门6电磁铁故障"), QSTR("待定")},
    {0x737A, QSTR("门7电磁铁故障"), QSTR("待定")},
    {0x738A, QSTR("门8电磁铁故障"), QSTR("待定")},

    // added by Deng Ran on the 6th of March 2015.
    {0x731B, QSTR("门1编码器故障"), QSTR("待定")},
    {0x732B, QSTR("门2编码器故障"), QSTR("待定")},
    {0x733B, QSTR("门3编码器故障"), QSTR("待定")},
    {0x734B, QSTR("门4编码器故障"), QSTR("待定")},
    {0x735B, QSTR("门5编码器故障"), QSTR("待定")},
    {0x736B, QSTR("门6编码器故障"), QSTR("待定")},
    {0x737B, QSTR("门7编码器故障"), QSTR("待定")},
    {0x738B, QSTR("门8编码器故障"), QSTR("待定")},

    // added by Deng Ran on the 6th of March 2015.
    {0x731C, QSTR("门1电机短路"), QSTR("待定")},
    {0x732C, QSTR("门2电机短路"), QSTR("待定")},
    {0x733C, QSTR("门3电机短路"), QSTR("待定")},
    {0x734C, QSTR("门4电机短路"), QSTR("待定")},
    {0x735C, QSTR("门5电机短路"), QSTR("待定")},
    {0x736C, QSTR("门6电机短路"), QSTR("待定")},
    {0x737C, QSTR("门7电机短路"), QSTR("待定")},
    {0x738C, QSTR("门8电机短路"), QSTR("待定")},

{0x8301,QSTR("1-1通风机故障"),                                   QSTR("查看机组内部")},
{0x8302,QSTR("1-2通风机故障"),                                   QSTR("查看机组内部")},
{0x8303,QSTR("2-1通风机故障"),                                   QSTR("查看机组内部")},
{0x8304,QSTR("2-2通风机故障"),                                   QSTR("查看机组内部")},
{0x8305,QSTR("1-1冷凝机故障"),                                      QSTR("查看机组内部")},
    {0x8306,QSTR("1-2冷凝机故障"),                                      QSTR("查看机组内部")},
    {0x8307,QSTR("2-1冷凝机故障"),                                      QSTR("查看机组内部")},
    {0x8308,QSTR("2-2冷凝机故障"),                                      QSTR("查看机组内部")},
//    {0x8309,QSTR("1-1电热故障"),                                   QSTR("查看机组内部")},
//    {0x830A,QSTR("1-2电热故障"),                                   QSTR("查看机组内部")},
//    {0x830B,QSTR("2-1电热故障"),                                   QSTR("查看机组内部")},
//    {0x830C,QSTR("2-2电热故障"),                                   QSTR("查看机组内部")},
    {0x830D,QSTR("1-1压缩机内部排温故障"),                                   QSTR("查看机组内部")},
    {0x830E,QSTR("1-2压缩机内部排温故障"),                                   QSTR("查看机组内部")},
    {0x830F,QSTR("2-1压缩机内部排温故障"),                                   QSTR("查看机组内部")},
    {0x8311,QSTR("2-2压缩机内部排温故障"),                                   QSTR("查看机组内部")},
    {0x8312,QSTR("1-1压缩机高压故障"),                                      QSTR("查看机组内部")},
    {0x8313,QSTR("1-2压缩机高压故障"),                                      QSTR("查看机组内部")},
    {0x8314,QSTR("2-1压缩机高压故障"),                                      QSTR("查看机组内部")},
    {0x8315,QSTR("2-2压缩机高压故障"),                                      QSTR("查看机组内部")},
    {0x8316,QSTR("1-1压缩机低压故障"),                                        QSTR("查看机组内部")},
    {0x8317,QSTR("1-2压缩机低压故障"),                                        QSTR("查看机组内部")},
    {0x8318,QSTR("2-1压缩机低压故障"),                                        QSTR("查看机组内部")},
    {0x8319,QSTR("2-2压缩机低压故障"),                                        QSTR("查看机组内部")},
    {0x831A,QSTR("1-1压缩机过流故障"),                                QSTR("查看机组内部")},
    {0x831B,QSTR("1-2压缩机过流故障"),                                QSTR("查看机组内部")},
    {0x831C,QSTR("2-1压缩机过流故障"),                                QSTR("查看机组内部")},
    {0x831D,QSTR("2-2压缩机过流故障"),                                QSTR("查看机组内部")},

//    {0x9301,QSTR("广播系统严重故障"),                              QSTR("广播系统严重故障")},
//    {0x9302,QSTR("广播系统中等故障"),                              QSTR("广播系统中等故障")},
//    {0x9303,QSTR("广播系统低等故障"),                                   QSTR("广播系统低等故障")},
    {0x9301,QSTR("TC1 端司机室广播控制面板故障"),                                   QSTR("司机：建议尝试断合空开43F01广播主机及终点站\n检修：检查广播控制面板的电路，接线")},
    {0x9302,QSTR("TC1 端司机室广播系统控制器故障"),                                   QSTR("司机：建议进行口播，尝试断空开43F01广播主机及终点站\n检修：检查广播控制面板的电路，接线")},
    {0x9303,QSTR("TC1 端司机室终点站显示器故障"),                                   QSTR("检查终点站显示器的电路，接线")},
    {0x9304,QSTR("TC2 端司机室广播控制面板故障"),                                   QSTR("司机：建议尝试断合空开43F01广播主机及终点站\n检修：检查广播控制面板的电路，接线")},
    {0x9305,QSTR("TC2 端司机室广播系统控制器故障"),                                   QSTR("司机：建议进行口播，尝试断空开43F01广播主机及终点站\n检修：检查广播控制面板的电路，接线")},
    {0x9306,QSTR("TC2 端司机室终点站显示器故障"),                        QSTR("检查终点站显示器的电路，接线")},
    {0x9311,QSTR("#1车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9312,QSTR("#1车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9313,QSTR("#1车-1位侧外部信息显示器故障"),                          QSTR("#1车-1位侧外部信息显示器故障")},
    {0x9314,QSTR("#1车-2位侧外部信息显示器故障"),                          QSTR("#1车-2位侧外部信息显示器故障")},
    {0x9315,QSTR("#1车-1位侧内部信息显示器故障"),                                QSTR("#1车-1位侧内部信息显示器故障")},
    {0x9316,QSTR("#1车-2位侧内部信息显示器故障"),                          QSTR("#1车-2位侧内部信息显示器故障")},
    {0x9317,QSTR("#1车-1号电子地图故障"),                                   QSTR("#1车-1号电子地图故障")},
    {0x9318,QSTR("#1车-2号电子地图故障"),                                   QSTR("#1车-2号电子地图故障")},
    {0x9319,QSTR("#1车-3号电子地图故障"),                                   QSTR("#1车-3号电子地图故障")},
    {0x931A,QSTR("#1车-4号电子地图故障"),                                   QSTR("#1车-4号电子地图故障")},
    {0x931B,QSTR("#1车-5号电子地图故障"),                                   QSTR("#1车-5号电子地图故障")},
    {0x931C,QSTR("#1车-6号电子地图故障"),                                   QSTR("#1车-6号电子地图故障")},
    {0x931D,QSTR("#1车-7号电子地图故障"),                                   QSTR("#1车-7号电子地图故障")},
    {0x931E,QSTR("#1车-8号电子地图故障"),                                   QSTR("#1车-8号电子地图故障")},
    {0x9321,QSTR("#2车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9322,QSTR("#2车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9323,QSTR("#2车-1位侧外部信息显示器故障"),                          QSTR("#2车-1位侧外部信息显示器故障")},
    {0x9324,QSTR("#2车-2位侧外部信息显示器故障"),                          QSTR("#2车-2位侧外部信息显示器故障")},
    {0x9325,QSTR("#2车-1位侧内部信息显示器故障"),                                QSTR("#2车-1位侧内部信息显示器故障")},
    {0x9326,QSTR("#2车-2位侧内部信息显示器故障"),                          QSTR("#2车-2位侧内部信息显示器故障")},
    {0x9327,QSTR("#2车-1号电子地图故障"),                                   QSTR("#2车-1号电子地图故障")},
    {0x9328,QSTR("#2车-2号电子地图故障"),                                   QSTR("#2车-2号电子地图故障")},
    {0x9329,QSTR("#2车-3号电子地图故障"),                                   QSTR("#2车-3号电子地图故障")},
    {0x932A,QSTR("#2车-4号电子地图故障"),                                   QSTR("#2车-4号电子地图故障")},
    {0x932B,QSTR("#2车-5号电子地图故障"),                                   QSTR("#2车-5号电子地图故障")},
    {0x932C,QSTR("#2车-6号电子地图故障"),                                   QSTR("#2车-6号电子地图故障")},
    {0x932D,QSTR("#2车-7号电子地图故障"),                                   QSTR("#2车-7号电子地图故障")},
    {0x932E,QSTR("#2车-8号电子地图故障"),                                   QSTR("#2车-8号电子地图故障")},

    {0x9331,QSTR("#3车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9332,QSTR("#3车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9333,QSTR("#3车-1位侧外部信息显示器故障"),                          QSTR("#3车-1位侧外部信息显示器故障")},
    {0x9334,QSTR("#3车-2位侧外部信息显示器故障"),                          QSTR("#3车-2位侧外部信息显示器故障")},
    {0x9335,QSTR("#3车-1位侧内部信息显示器故障"),                                QSTR("#3车-1位侧内部信息显示器故障")},
    {0x9336,QSTR("#3车-2位侧内部信息显示器故障"),                          QSTR("#3车-2位侧内部信息显示器故障")},
    {0x9337,QSTR("#3车-1号电子地图故障"),                                   QSTR("#3车-1号电子地图故障")},
    {0x9338,QSTR("#3车-2号电子地图故障"),                                   QSTR("#3车-2号电子地图故障")},
    {0x9339,QSTR("#3车-3号电子地图故障"),                                   QSTR("#3车-3号电子地图故障")},
    {0x933A,QSTR("#3车-4号电子地图故障"),                                   QSTR("#3车-4号电子地图故障")},
    {0x933B,QSTR("#3车-5号电子地图故障"),                                   QSTR("#3车-5号电子地图故障")},
    {0x933C,QSTR("#3车-6号电子地图故障"),                                   QSTR("#3车-6号电子地图故障")},
    {0x933D,QSTR("#3车-7号电子地图故障"),                                   QSTR("#3车-7号电子地图故障")},
    {0x933E,QSTR("#3车-8号电子地图故障"),                                   QSTR("#3车-8号电子地图故障")},

    {0x9341,QSTR("#4车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9342,QSTR("#4车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9343,QSTR("#4车-1位侧外部信息显示器故障"),                          QSTR("#4车-1位侧外部信息显示器故障")},
    {0x9344,QSTR("#4车-2位侧外部信息显示器故障"),                          QSTR("#4车-2位侧外部信息显示器故障")},
    {0x9345,QSTR("#4车-1位侧内部信息显示器故障"),                                QSTR("#1车-1位侧内部信息显示器故障")},
    {0x9346,QSTR("#4车-2位侧内部信息显示器故障"),                          QSTR("#4车-2位侧内部信息显示器故障")},
    {0x9347,QSTR("#4车-1号电子地图故障"),                                   QSTR("#4车-1号电子地图故障")},
    {0x9348,QSTR("#4车-2号电子地图故障"),                                   QSTR("#4车-2号电子地图故障")},
    {0x9349,QSTR("#4车-3号电子地图故障"),                                   QSTR("#4车-3号电子地图故障")},
    {0x934A,QSTR("#4车-4号电子地图故障"),                                   QSTR("#4车-4号电子地图故障")},
    {0x934B,QSTR("#4车-5号电子地图故障"),                                   QSTR("#4车-5号电子地图故障")},
    {0x934C,QSTR("#4车-6号电子地图故障"),                                   QSTR("#4车-6号电子地图故障")},
    {0x934D,QSTR("#4车-7号电子地图故障"),                                   QSTR("#4车-7号电子地图故障")},
    {0x934E,QSTR("#4车-8号电子地图故障"),                                   QSTR("#4车-8号电子地图故障")},

    {0x9351,QSTR("#5车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9352,QSTR("#5车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9353,QSTR("#5车-1位侧外部信息显示器故障"),                          QSTR("#5车-1位侧外部信息显示器故障")},
    {0x9354,QSTR("#5车-2位侧外部信息显示器故障"),                          QSTR("#5车-2位侧外部信息显示器故障")},
    {0x9355,QSTR("#5车-1位侧内部信息显示器故障"),                                QSTR("#5车-1位侧内部信息显示器故障")},
    {0x9356,QSTR("#5车-2位侧内部信息显示器故障"),                          QSTR("#5车-2位侧内部信息显示器故障")},
    {0x9357,QSTR("#5车-1号电子地图故障"),                                   QSTR("#5车-1号电子地图故障")},
    {0x9358,QSTR("#5车-2号电子地图故障"),                                   QSTR("#5车-2号电子地图故障")},
    {0x9359,QSTR("#5车-3号电子地图故障"),                                   QSTR("#5车-3号电子地图故障")},
    {0x935A,QSTR("#5车-4号电子地图故障"),                                   QSTR("#5车-4号电子地图故障")},
    {0x935B,QSTR("#5车-5号电子地图故障"),                                   QSTR("#5车-5号电子地图故障")},
    {0x935C,QSTR("#5车-6号电子地图故障"),                                   QSTR("#5车-6号电子地图故障")},
    {0x935D,QSTR("#5车-7号电子地图故障"),                                   QSTR("#5车-7号电子地图故障")},
    {0x935E,QSTR("#5车-8号电子地图故障"),                                   QSTR("#5车-8号电子地图故障")},

    {0x9361,QSTR("#6车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9362,QSTR("#6车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9363,QSTR("#6车-1位侧外部信息显示器故障"),                          QSTR("#6车-1位侧外部信息显示器故障")},
    {0x9364,QSTR("#6车-2位侧外部信息显示器故障"),                          QSTR("#6车-2位侧外部信息显示器故障")},
    {0x9365,QSTR("#6车-1位侧内部信息显示器故障"),                                QSTR("#6车-1位侧内部信息显示器故障")},
    {0x9366,QSTR("#6车-2位侧内部信息显示器故障"),                          QSTR("#6车-2位侧内部信息显示器故障")},
    {0x9367,QSTR("#6车-1号电子地图故障"),                                   QSTR("#6车-1号电子地图故障")},
    {0x9368,QSTR("#6车-2号电子地图故障"),                                   QSTR("#6车-2号电子地图故障")},
    {0x9369,QSTR("#6车-3号电子地图故障"),                                   QSTR("#6车-3号电子地图故障")},
    {0x936A,QSTR("#6车-4号电子地图故障"),                                   QSTR("#6车-4号电子地图故障")},
    {0x936B,QSTR("#6车-5号电子地图故障"),                                   QSTR("#6车-5号电子地图故障")},
    {0x936C,QSTR("#6车-6号电子地图故障"),                                   QSTR("#6车-6号电子地图故障")},
    {0x936D,QSTR("#6车-7号电子地图故障"),                                   QSTR("#6车-7号电子地图故障")},
    {0x936E,QSTR("#6车-8号电子地图故障"),                                   QSTR("#6车-8号电子地图故障")},

    {0x9371,QSTR("#7车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9372,QSTR("#7车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9373,QSTR("#7车-1位侧外部信息显示器故障"),                          QSTR("#7车-1位侧外部信息显示器故障")},
    {0x9374,QSTR("#7车-2位侧外部信息显示器故障"),                          QSTR("#7车-2位侧外部信息显示器故障")},
    {0x9375,QSTR("#7车-1位侧内部信息显示器故障"),                                QSTR("#7车-1位侧内部信息显示器故障")},
    {0x9376,QSTR("#7车-2位侧内部信息显示器故障"),                          QSTR("#7车-2位侧内部信息显示器故障")},
    {0x9377,QSTR("#7车-1号电子地图故障"),                                   QSTR("#7车-1号电子地图故障")},
    {0x9378,QSTR("#7车-2号电子地图故障"),                                   QSTR("#7车-2号电子地图故障")},
    {0x9379,QSTR("#7车-3号电子地图故障"),                                   QSTR("#7车-3号电子地图故障")},
    {0x937A,QSTR("#7车-4号电子地图故障"),                                   QSTR("#7车-4号电子地图故障")},
    {0x937B,QSTR("#7车-5号电子地图故障"),                                   QSTR("#7车-5号电子地图故障")},
    {0x937C,QSTR("#7车-6号电子地图故障"),                                   QSTR("#7车-6号电子地图故障")},
    {0x937D,QSTR("#7车-7号电子地图故障"),                                   QSTR("#7车-7号电子地图故障")},
    {0x937E,QSTR("#7车-8号电子地图故障"),                                   QSTR("#7车-8号电子地图故障")},

    {0x9381,QSTR("#8车广播功率放大器故障"),                        QSTR("司机：建议进行口播提示乘客\n检修：检查广播功率放大器的电路，接线")},
    {0x9382,QSTR("#8车客室广播声音故障"),                                QSTR("司机：建议进行口播提示乘客\n检修：更换功率放大器")},
    {0x9383,QSTR("#8车-1位侧外部信息显示器故障"),                          QSTR("#8车-1位侧外部信息显示器故障")},
    {0x9384,QSTR("#8车-2位侧外部信息显示器故障"),                          QSTR("#8车-2位侧外部信息显示器故障")},
    {0x9385,QSTR("#8车-1位侧内部信息显示器故障"),                                QSTR("#8车-1位侧内部信息显示器故障")},
    {0x9386,QSTR("#8车-2位侧内部信息显示器故障"),                          QSTR("#8车-2位侧内部信息显示器故障")},
    {0x9387,QSTR("#8车-1号电子地图故障"),                                   QSTR("#8车-1号电子地图故障")},
    {0x9388,QSTR("#8车-2号电子地图故障"),                                   QSTR("#8车-2号电子地图故障")},
    {0x9389,QSTR("#8车-3号电子地图故障"),                                   QSTR("#8车-3号电子地图故障")},
    {0x938A,QSTR("#8车-4号电子地图故障"),                                   QSTR("#8车-4号电子地图故障")},
    {0x938B,QSTR("#8车-5号电子地图故障"),                                   QSTR("#8车-5号电子地图故障")},
    {0x938C,QSTR("#8车-6号电子地图故障"),                                   QSTR("#8车-6号电子地图故障")},
    {0x938D,QSTR("#8车-7号电子地图故障"),                                   QSTR("#8车-7号电子地图故障")},
    {0x938E,QSTR("#8车-8号电子地图故障"),                                   QSTR("#8车-8号电子地图故障")},

    {0xA201,QSTR("ATC设备故障"),                                           QSTR("ATC设备故障")},
    {0xA301,QSTR("ATC设备可用性下降"),                                      QSTR("ATC设备可用性下降")},

    {0xB101,QSTR("Tc1车感温感烟复合探测器1火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB102,QSTR("Tc1车感温感烟复合探测器2火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB103,QSTR("Tc1车感温感烟复合探测器3火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB104,QSTR("Tc1车感温感烟复合探测器4火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB105,QSTR("Tc1车感温感烟复合探测器5火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB106,QSTR("Tc1车感温感烟复合探测器6火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB107,QSTR(" Mp1车感温感烟复合探测器7火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB108,QSTR(" Mp1车感温感烟复合探测器8火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB109,QSTR(" Mp1车感温感烟复合探测器9火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB110,QSTR(" Mp1车感温感烟复合探测器10火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB111,QSTR(" Mp1车感温感烟复合探测器11火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB112,QSTR(" M1车感温感烟复合探测器12火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB113,QSTR(" M1车感温感烟复合探测器13火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB114,QSTR(" M1车感温感烟复合探测器14火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB115,QSTR(" M1车感温感烟复合探测器15火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB116,QSTR(" M1车感温感烟复合探测器16火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB117,QSTR(" Mp3车感温感烟复合探测器17火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB118,QSTR(" Mp3车感温感烟复合探测器18火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB119,QSTR(" Mp3车感温感烟复合探测器19火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB120,QSTR(" Mp3车感温感烟复合探测器20火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB121,QSTR(" Mp3车感温感烟复合探测器21火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB122,QSTR(" M3车感温感烟复合探测器22火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB123,QSTR(" M3车感温感烟复合探测器23火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB124,QSTR(" M3车感温感烟复合探测器24火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB125,QSTR(" M3车感温感烟复合探测器25火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB126,QSTR(" M3车感温感烟复合探测器26火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB127,QSTR(" M2车感温感烟复合探测器27火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB128,QSTR(" M2车感温感烟复合探测器28火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB129,QSTR(" M2车感温感烟复合探测器29火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB130,QSTR(" M2车感温感烟复合探测器30火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB131,QSTR(" M2车感温感烟复合探测器31火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB132,QSTR(" Mp3车感温感烟复合探测器32火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB133,QSTR(" Mp3车感温感烟复合探测器33火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB134,QSTR(" Mp3车感温感烟复合探测器34火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB135,QSTR(" Mp3车感温感烟复合探测器35火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB136,QSTR(" Mp3车感温感烟复合探测器36火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB137,QSTR("Tc2车感温感烟复合探测器37火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB138,QSTR("Tc2车感温感烟复合探测器38火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB139,QSTR("Tc2车感温感烟复合探测器39火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB140,QSTR("Tc2车感温感烟复合探测器40火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB141,QSTR("Tc2车感温感烟复合探测器41火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB142,QSTR("Tc2车感温感烟复合探测器42火警"),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB143,QSTR("Tc1车感温电缆43火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB144,QSTR("Mp1车感温电缆44火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB145,QSTR("M1车感温电缆45火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB146,QSTR("Mp3车感温电缆46火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB147,QSTR("M3车感温电缆47火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB148,QSTR("M2车感温电缆48火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB149,QSTR("Mp2车感温电缆49火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB150,QSTR("Tc2车感温电缆50火警 "),                            QSTR("司机：按照HMI烟火报警界面提示位置确认火警\n检修：若为误报故障，则更换则返厂")},
    {0xB201,QSTR("Tc1车感温感烟复合探测器1故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB202,QSTR("Tc1车感温感烟复合探测器2故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB203,QSTR("Tc1车感温感烟复合探测器3故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB204,QSTR("Tc1车感温感烟复合探测器4故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB205,QSTR("Tc1车感温感烟复合探测器5故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB206,QSTR("Tc1车感温感烟复合探测器6故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB207,QSTR(" Mp1车感温感烟复合探测器7故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB208,QSTR(" Mp1车感温感烟复合探测器8故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB209,QSTR(" Mp1车感温感烟复合探测器9故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB210,QSTR(" Mp1车感温感烟复合探测器10故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB211,QSTR(" Mp1车感温感烟复合探测器11故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB212,QSTR(" M1车感温感烟复合探测器12故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB213,QSTR(" M1车感温感烟复合探测器13故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB214,QSTR(" M1车感温感烟复合探测器14故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB215,QSTR(" M1车感温感烟复合探测器15故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB216,QSTR(" M1车感温感烟复合探测器16故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB217,QSTR(" Mp3车感温感烟复合探测器17故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB218,QSTR(" Mp3车感温感烟复合探测器18故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB219,QSTR(" Mp3车感温感烟复合探测器19故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB220,QSTR(" Mp3车感温感烟复合探测器20故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB221,QSTR(" Mp3车感温感烟复合探测器21故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB222,QSTR(" M3车感温感烟复合探测器22故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB223,QSTR(" M3车感温感烟复合探测器23故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB224,QSTR(" M3车感温感烟复合探测器24故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB225,QSTR(" M3车感温感烟复合探测器25故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB226,QSTR(" M3车感温感烟复合探测器26故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB227,QSTR(" M2车感温感烟复合探测器27故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB228,QSTR(" M2车感温感烟复合探测器28故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB229,QSTR(" M2车感温感烟复合探测器29故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB230,QSTR(" M2车感温感烟复合探测器30故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB231,QSTR(" M2车感温感烟复合探测器31故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB232,QSTR(" Mp3车感温感烟复合探测器32故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB233,QSTR(" Mp3车感温感烟复合探测器33故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB234,QSTR(" Mp3车感温感烟复合探测器34故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB235,QSTR(" Mp3车感温感烟复合探测器35故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB236,QSTR(" Mp3车感温感烟复合探测器36故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB237,QSTR("Tc2车感温感烟复合探测器37故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB238,QSTR("Tc2车感温感烟复合探测器38故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB239,QSTR("Tc2车感温感烟复合探测器39故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB240,QSTR("Tc2车感温感烟复合探测器40故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB241,QSTR("Tc2车感温感烟复合探测器41故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB242,QSTR("Tc2车感温感烟复合探测器42故障"),                            QSTR("消音，完成全天运行后返回基地处理。\n更换探测器，返厂维修")},
    {0xB243,QSTR("Tc1车感温电缆43故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB244,QSTR("Mp1车感温电缆44故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB245,QSTR("M1车感温电缆45故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB246,QSTR("Mp3车感温电缆46故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB247,QSTR("M3车感温电缆47故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB248,QSTR("M2车感温电缆48故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB249,QSTR("Mp2车感温电缆49故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB250,QSTR("Tc2车感温电缆50故障 "),                            QSTR("消音，完成全天运行后返回基地处理。\n更换感温电缆或接口模块，返厂维修")},
    {0xB251,QSTR("烟火控制器1故障"),                                           QSTR("消音，完成全天运行后返回基地。\n更换控制器，返厂维修")},
    {0xB252,QSTR("烟火控制器2故障"),                                           QSTR("消音，完成全天运行后返回基地。\n更换控制器，返厂维修")},
    {0xB253,QSTR("烟火总线短路故障"),                                         QSTR("消音，完成全天运行后返回基地。\n检修系统总线")},
    {0xB254,QSTR("烟火总线断路故障"),                                         QSTR("消音，完成全天运行后返回基地。\n检修系统总线")},

//    {0xA303,QSTR("VRS轻微故障"),                                        QSTR("无")},
//    {0xA304,QSTR("VRS严重故障"),                                        QSTR("VRS严重故障")},
//    {0xA305,QSTR("车载应答器天线轻微故障"),                                QSTR("无")},
//    {0xA306,QSTR("车载应答器天线严重故障"),                                QSTR("车载应答器天线严重故障")},

    // added by Deng Ran on the 21st of August 2017.
    {0xC201, QSTR("TC1车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC202, QSTR("TC1车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC203, QSTR("TC1车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC204, QSTR("TC1车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC205, QSTR("MP1车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC206, QSTR("MP1车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC207, QSTR("MP1车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC208, QSTR("MP1车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC209, QSTR("M1车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC210, QSTR("M1车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC211, QSTR("M1车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC212, QSTR("M1车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC213, QSTR("MP3车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC214, QSTR("MP3车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC215, QSTR("MP3车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC216, QSTR("MP3车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC217, QSTR("M3车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC218, QSTR("M3车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC219, QSTR("M3车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC220, QSTR("M3车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC221, QSTR("M2车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC222, QSTR("M2车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC223, QSTR("M2车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC224, QSTR("M2车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC225, QSTR("MP2车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC226, QSTR("MP2车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC227, QSTR("MP2车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC228, QSTR("MP2车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC229, QSTR("TC2车1轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC230, QSTR("TC2车2轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC231, QSTR("TC2车3轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC232, QSTR("TC2车4轴中等故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    // deleted by Deng Ran on the 21st of August 2017.
    // {0xC301, QSTR("RSFDS系统轻微故障"), QSTR("运营至终点回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC302, QSTR("内部总线通信异常"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC303, QSTR("TC1车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC304, QSTR("TC1车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC305, QSTR("TC1车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC306, QSTR("TC1车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC307, QSTR("TC1车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC308, QSTR("TC1车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC309, QSTR("TC1车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC310, QSTR("MP1车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC311, QSTR("MP1车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC312, QSTR("MP1车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC313, QSTR("MP1车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC314, QSTR("MP1车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC315, QSTR("MP1车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC316, QSTR("MP1车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC317, QSTR("M1车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC318, QSTR("M1车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC319, QSTR("M1车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC320, QSTR("M1车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC321, QSTR("M1车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC322, QSTR("M1车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC323, QSTR("M1车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC324, QSTR("MP3车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC325, QSTR("MP3车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC326, QSTR("MP3车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC327, QSTR("MP3车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC328, QSTR("MP3车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC329, QSTR("MP3车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC330, QSTR("MP3车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC331, QSTR("M3车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC332, QSTR("M3车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC333, QSTR("M3车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC334, QSTR("M3车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC335, QSTR("M3车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC336, QSTR("M3车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC337, QSTR("M3车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC338, QSTR("M2车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC339, QSTR("M2车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC340, QSTR("M2车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC341, QSTR("M2车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC342, QSTR("M2车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC343, QSTR("M2车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC344, QSTR("M2车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC345, QSTR("MP2车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC346, QSTR("MP2车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC347, QSTR("MP2车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC348, QSTR("MP2车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC349, QSTR("MP2车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC350, QSTR("MP2车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC351, QSTR("MP2车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    {0xC352, QSTR("TC2车1轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC353, QSTR("TC2车2轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC354, QSTR("TC2车3轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC355, QSTR("TC2车4轴轻微故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC356, QSTR("TC2车诊断仪故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC357, QSTR("TC2车前置处理器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},
    {0xC358, QSTR("TC2车传感器故障"), QSTR("安排完成当日行车任务后回库检修\n1、下载数据\n2、对故障位置检查并视情维修")},

    // the fault of pantograph
    {0xD101, QSTR("受电弓羊角缺失"), QSTR("紧急等车，检修受电弓")},
    {0xD102, QSTR("受电弓夹杂异物"), QSTR("紧急等车，检修受电弓")},
    {0xD103, QSTR("碳滑板脱落"), QSTR("紧急等车，检修受电弓")},
    {0xD201, QSTR("受电弓羊角严重变形"), QSTR("在运营完本次后，检修受电弓")},
    {0xD301, QSTR("受电弓羊角轻微变形"), QSTR("在运营完全天后，检修受电弓")},
    {0xD302, QSTR("受电弓滑板磨耗临界"), QSTR("在运营完全天后，检修受电弓滑板")},
    {0xD303, QSTR("受电弓滑板严重缺口"), QSTR("在运营完全天后，检修受电弓滑板")},
    {0xD304, QSTR("弓网严重拉弧"), QSTR("在维修时，检修受电弓以及对应故障处接触网")},
    {0xD305, QSTR("受电弓温度异常"), QSTR("检修弓网检测设备")},
    {0xD316, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD326, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD336, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD346, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD356, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD366, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD376, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD386, QSTR("弓网监测设备1号相机异常"), QSTR("检修弓网检测设备")},
    {0xD307, QSTR("弓网监测设备温度异常"), QSTR("检修弓网检测设备")},
    {0xD308, QSTR("弓网监测设备主控系统异常"), QSTR("检修弓网检测设备")},
};

int g_faultsInfoRomLen = sizeof(g_faultsinforom)/sizeof(ST_FAULT_INFO);

FAULTS_ROM_DATA g_faultsrom[]={

    {0x1101,  1,  D_POS_A,1765,   bit3,   false,  false, true,  E_FAULTS_CATEGORY_TCMS   },
    {0x1101,  1,  D_POS_H,1766,   bit5,   false,  false, true,  E_FAULTS_CATEGORY_TCMS   },
    {0x1201,  1,  D_POS_A,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1201,  1,  D_POS_H,   2,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_B,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_C,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_D,  52,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_E,  53,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_F,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1202,  2,  D_POS_G,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1203,  1,  D_POS_A,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1203,  1,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1204,  1,  D_POS_A,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1204,  1,  D_POS_D,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1204,  1,  D_POS_E,  52,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1204,  1,  D_POS_H,  53,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_A,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_B,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_C,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_D,  52,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_E,  53,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_F,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_G,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1205,  1,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_A,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_B,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_C,   0,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_D,  52,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_E,  53,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_F,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_G,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1206,  1,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1207,  1,  D_POS_A,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1207,  1,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
//    {0x1207,  2,  D_POS_A,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1208,  1,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1209,  2,  D_POS_A,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1209,  2,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },

    {0x1210,  1,  D_POS_H,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1211,  1,  D_POS_A,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },

    {0x120B,  2,  D_POS_A,  54,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x120B,  2,  D_POS_H,  55,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },

    {0x1301,  2,  D_POS_A,   4,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_B,  12,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_C,  20,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_D,  28,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_E,  36,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_F,  44,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_G,  36,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1301,  2,  D_POS_H,  44,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },

    {0x1302,  1,  D_POS_A,   5,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_B,  13,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_C,  21,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_D,  29,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_E,  37,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_F,  45,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  2,  D_POS_G,  37,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1302,  1,  D_POS_H,  45,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_A,   6,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_B,  14,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_C,  22,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_D,  30,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_E,  38,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_F,  46,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_G,  38,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1303,  2,  D_POS_H,  46,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_A,   7,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_B,  15,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_C,  23,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_D,  31,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_E,  39,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_F,  47,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_G,  39,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1304,  2,  D_POS_H,  47,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_A,   8,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_B,  16,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_C,  24,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_D,  32,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_E,  40,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_F,  48,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_G,  40,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1305,  2,  D_POS_H,  48,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  1,  D_POS_A,   9,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_B,  17,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_C,  25,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_D,  33,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_E,  41,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_F,  49,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  2,  D_POS_G,  41,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1306,  1,  D_POS_H,  49,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_A,  10,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_B,  18,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_C,  26,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_D,  34,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_E,  42,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_F,  50,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_G,  42,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1307,  2,  D_POS_H,  50,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_A,  11,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_B,  19,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_C,  27,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_D,  35,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_E,  43,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_F,  51,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_G,  43,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },
    {0x1308,  2,  D_POS_H,  51,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCMS   },

    {0x3101,  1,  D_POS_A,  1766,   bit4,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3102,  1,  D_POS_A,  1765,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3103,  1,  D_POS_A,  1765,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3104,  1,  D_POS_A,  1765,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3105,  1,  D_POS_A,  1765,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3102,  1,  D_POS_H,  1766,   bit3,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3103,  1,  D_POS_H,  1766,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3104,  1,  D_POS_H,  1766,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3105,  1,  D_POS_H,  1766,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3106,  1,  D_POS_A,  1764,   bit14,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3107,  1,  D_POS_A,  1764,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3108,  1,  D_POS_A,  1764,   bit12,  false,  false, true,  E_FAULTS_CATEGORY_CAB    },
    {0x3201,  2,  D_POS_A,  1764,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_CAB    },
    {0x3202,  2,  D_POS_A,  1764,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_CAB    },
 //   {0x3301,  3,  D_POS_A,  1766,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_CAB    },
//    {0x2101,  1,  D_POS_A,  92,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TL    },
//    {0x2102,  1,  D_POS_A,  92,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TL    },
//    {0x2103,  1,  D_POS_A,  92,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TL    },
    {0x4101,  1,  D_POS_A, 3068,   bit8,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },//414  Byte 9 Bit 7
    {0x4101,  1,  D_POS_H, 3148,   bit8,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },

    {0x4102,  1,  D_POS_A, 3067,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_A, 3067,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_B, 3067,   bit13,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_B, 3067,   bit12,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_C, 3067,   bit11,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_C, 3067,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_D, 3067,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_D, 3067,   bit8,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_H, 3147,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_H, 3147,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_G, 3147,   bit13,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_G, 3147,   bit12,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_F, 3147,   bit11,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_F, 3147,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4102,  1,  D_POS_E, 3147,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4103,  1,  D_POS_E, 3147,   bit8,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },

    {0x4104,  1,  D_POS_A, 3068,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4104,  1,  D_POS_H, 3148,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_BCU    },

//    {0x4105,  1,  D_POS_A, 3147,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4106,  1,  D_POS_A, 1758,   bit14,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4107,  1,  D_POS_A, 1758,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4108,  1,  D_POS_A, 1758,   bit12,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },

    // {0x4201,  2,  D_POS_A, 3069,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    // {0x4201,  2,  D_POS_H, 3149,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_A, 3067,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_A, 3067,   bit6,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_B, 3067,   bit5,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_B, 3067,   bit4,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_C, 3067,   bit3,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_C, 3067,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_D, 3067,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_D, 3067,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_H, 3147,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_H, 3147,   bit6,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_G, 3147,   bit5,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_G, 3147,   bit4,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_F, 3147,   bit3,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_F, 3147,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4202,  1,  D_POS_E, 3147,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },
    {0x4203,  1,  D_POS_E, 3147,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_BCU    },

//    {0x4204,  2,  D_POS_A, 3063,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_A, 3063,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_B, 3063,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_B, 3063,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_C, 3063,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_C, 3063,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_D, 3063,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_D, 3063,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_H, 3143,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_H, 3143,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_G, 3143,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_G, 3143,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_F, 3143,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_F, 3143,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4204,  2,  D_POS_E, 3143,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4205,  2,  D_POS_E, 3143,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

    {0x4206,  1,  D_POS_A, 1758,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4207,  1,  D_POS_A, 1758,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4208,  1,  D_POS_A, 1758,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

    // {0x4301,  3,  D_POS_A, 3069,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    // {0x4301,  3,  D_POS_H, 3149,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4302,  3,  D_POS_A, 3057,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4302,  3,  D_POS_H, 3137,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_A, 3068,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_A, 3068,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_B, 3068,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_B, 3068,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_C, 3068,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_C, 3068,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_D, 3068,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_D, 3068,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_H, 3148,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_H, 3148,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_G, 3148,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_G, 3148,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_F, 3148,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_F, 3148,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4303,  1,  D_POS_E, 3148,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4304,  1,  D_POS_E, 3148,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4305,  3,  D_POS_A, 3068,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4305,  3,  D_POS_H, 3148,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_B, 3068,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_C, 3068,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_D, 3068,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_G, 3148,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_F, 3148,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4306,  2,  D_POS_E, 3148,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4307,  2,  D_POS_A, 1765,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4307,  2,  D_POS_H, 1765,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

//    {0x4308,  3,  D_POS_A, 3062,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_A, 3062,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_A, 3062,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_A, 3062,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_H, 3142,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_H, 3142,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_H, 3142,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
//    {0x4308,  3,  D_POS_H, 3142,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_A, 3045,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_A, 3045,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_A, 3045,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_A, 3045,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_B, 3045,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_B, 3045,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_B, 3045,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_B, 3045,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_C, 3046,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_C, 3046,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_C, 3046,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_C, 3046,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_D, 3046,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_D, 3046,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_D, 3046,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_D, 3046,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

    {0x4309,  2,  D_POS_H, 3125,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_H, 3125,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_H, 3125,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_H, 3125,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_G, 3125,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_G, 3125,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_G, 3125,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_G, 3125,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_F, 3126,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_F, 3126,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_F, 3126,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_F, 3126,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4309,  2,  D_POS_E, 3126,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4310,  2,  D_POS_E, 3126,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4311,  2,  D_POS_E, 3126,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4312,  2,  D_POS_E, 3126,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

    {0x4313,  3,  D_POS_A, 3063,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_B, 3063,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_C, 3063,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_D, 3063,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_H, 3143,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_G, 3143,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_F, 3143,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4313,  3,  D_POS_E, 3143,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },

    {0x4314,  1,  D_POS_A, 3999,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_A, 3999,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_B, 3999,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_B, 3999,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_C, 3999,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_C, 3999,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_D, 3999,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_D, 3999,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_E, 3999,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_E, 3999,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_F, 3999,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_F, 3999,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_G, 3999,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_G, 3999,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4314,  1,  D_POS_H, 3999,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4315,  1,  D_POS_H, 3999,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4316,  1,  D_POS_A, 1765,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4317,  1,  D_POS_A, 1765,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4318,  3,  D_POS_A, 1765,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },


    {0x4319,  2,  D_POS_A, 3062,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4320,  2,  D_POS_A, 3062,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4321,  2,  D_POS_A, 3062,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4322,  2,  D_POS_A, 3062,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4319,  2,  D_POS_H, 3142,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4320,  2,  D_POS_H, 3142,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4321,  2,  D_POS_H, 3142,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },
    {0x4322,  2,  D_POS_H, 3142,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_BCU    },


    {0x5101,  1,  D_POS_A,  1765,   bit4,  false,  false, true,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_B,  676,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_B,  676,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_B,  676,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_B,  676,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_B,  676,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_B,  676,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_B,  681,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_B,  677,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_B,  681,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5307,  3,  D_POS_B,  682,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5273,  2,  D_POS_B,  682,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_B,  682,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_B,  678,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_B,  678,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_B,  680,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_B,  680,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_B,  677,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_B,  677,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_B,  677,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_B,  681,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_B,  679,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_B,  679,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_B,  679,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_B,  679,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_B,  679,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_B,  679,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_B,  679,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_B,  679,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_B,  678,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_B,  678,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_B,  678,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_B,  679,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_B,  679,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_B,  680,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_B,  678,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_B,  680,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_B,  680,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_B,  679,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_B,  680,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_B,  679,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_B,  680,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_B,  679,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_B,  679,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_B,  679,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_B,  681,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_B,  681,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_B,  681,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_B,  681,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_B,  681,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_B,  681,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_B,  678,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_B,  681,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_B,  681,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_B,  679,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_B,  682,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_B,  678,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_B,  680,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_B,  680,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_B,  680,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_B,  680,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_B,  681,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_B,  681,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_B,  678,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_B,  678,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_B,  678,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_B,  680,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_B,  680,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_B,  680,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_B,  680,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_B,  678,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_B,  680,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_B,  678,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_B,  678,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_B,  677,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5371,  2,  D_POS_B,  681,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5372,  2,  D_POS_B,  681,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_C,  676+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_C,  676+32,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_C,  676+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_C,  676+32,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_C,  676+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_C,  676+32,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_C,  681+32,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_C,  677+32,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_C,  681+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5307,  3,  D_POS_C,  682+32,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5273,  2,  D_POS_C,  682 + 32,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_C,  682+32,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_C,  678+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_C,  678+32,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_C,  680+32,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_C,  680+32,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_C,  677+32,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_C,  677+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_C,  677+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_C,  681+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_C,  679+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_C,  679+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_C,  679+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_C,  679+32,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_C,  679+32,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_C,  679+32,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_C,  679+32,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_C,  679+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_C,  678+32,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_C,  678+32,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_C,  678+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_C,  679+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_C,  679+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_C,  680+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_C,  678+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_C,  680+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_C,  680+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_C,  679+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_C,  680+32,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_C,  679+32,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_C,  680+32,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_C,  679+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_C,  679+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_C,  679+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_C,  681+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_C,  681+32,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_C,  681+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_C,  681+32,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_C,  681+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_C,  681+32,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_C,  678+32,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_C,  681+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_C,  681+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_C,  679+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_C,  682+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_C,  678+32,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_C,  680+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_C,  680+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_C,  680+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_C,  680+32,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_C,  681+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_C,  681+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_C,  678+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_C,  678+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_C,  678+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_C,  680+32,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_C,  680+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_C,  680+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_C,  680+32,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_C,  678+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_C,  680+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_C,  678+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_C,  678+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_C,  677+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
//    {0x5371,  3,  D_POS_C,  681+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
//    {0x5372,  3,  D_POS_C,  681+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_D,  676+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_D,  676+64,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_D,  676+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_D,  676+64,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_D,  676+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_D,  676+64,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_D,  681+64,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_D,  677+64,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_D,  681+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5273,  2,  D_POS_D,  682 + 64,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5307,  3,  D_POS_D,  682+64,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_D,  682+64,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_D,  678+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_D,  678+64,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_D,  680+64,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_D,  680+64,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_D,  677+64,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_D,  677+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_D,  677+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_D,  681+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_D,  679+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_D,  679+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_D,  679+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_D,  679+64,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_D,  679+64,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_D,  679+64,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_D,  679+64,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_D,  679+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_D,  678+64,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_D,  678+64,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_D,  678+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_D,  679+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_D,  679+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_D,  680+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_D,  678+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_D,  680+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_D,  680+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_D,  679+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_D,  680+64,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_D,  679+64,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_D,  680+64,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_D,  679+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_D,  679+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_D,  679+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_D,  681+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_D,  681+64,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_D,  681+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_D,  681+64,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_D,  681+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_D,  681+64,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_D,  678+64,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_D,  681+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_D,  681+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_D,  679+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_D,  682+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_D,  678+64,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_D,  680+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_D,  680+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_D,  680+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_D,  680+64,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_D,  681+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_D,  681+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_D,  678+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_D,  678+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_D,  678+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_D,  680+64,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_D,  680+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_D,  680+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_D,  680+64,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_D,  678+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_D,  680+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_D,  678+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_D,  678+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_D,  677+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
 //   {0x5371,  1,  D_POS_D,  681+64,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5372,  2,  D_POS_D,  681+64,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_E,  676+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_E,  676+96,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_E,  676+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_E,  676+96,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_E,  676+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_E,  676+96,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_E,  681+96,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_E,  677+96,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_E,  681+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5273,  2,  D_POS_E,  682 + 96,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5307,  3,  D_POS_E,  682+96,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_E,  682+96,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_E,  678+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_E,  678+96,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_E,  680+96,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_E,  680+96,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_E,  677+96,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_E,  677+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_E,  677+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_E,  681+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_E,  679+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_E,  679+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_E,  679+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_E,  679+96,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_E,  679+96,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_E,  679+96,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_E,  679+96,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_E,  679+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_E,  678+96,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_E,  678+96,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_E,  678+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_E,  679+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_E,  679+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_E,  680+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_E,  678+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_E,  680+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_E,  680+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_E,  679+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_E,  680+96,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_E,  679+96,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_E,  680+96,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_E,  679+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_E,  679+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_E,  679+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_E,  681+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_E,  681+96,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_E,  681+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_E,  681+96,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_E,  681+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_E,  681+96,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_E,  678+96,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_E,  681+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_E,  681+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_E,  679+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_E,  682+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_E,  678+96,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_E,  680+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_E,  680+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_E,  680+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_E,  680+96,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_E,  681+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_E,  681+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_E,  678+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_E,  678+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_E,  678+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_E,  680+96,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_E,  680+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_E,  680+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_E,  680+96,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_E,  678+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_E,  680+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_E,  678+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_E,  678+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_E,  677+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
 //   {0x5371,  3,  D_POS_E,  681+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
 //   {0x5372,  3,  D_POS_E,  681+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_F,  676+128,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_F,  676+128,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_F,  676+128,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_F,  676+128,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_F,  676+128,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_F,  676+128,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_F,  681+128,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_F,  677+128,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_F,  681+128,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5307,  3,  D_POS_F,  682+128,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5273,  2,  D_POS_F,  682 + 128,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_F,  682+128,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_F,  678+128,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_F,  678+128,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_F,  680+128,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_F,  680+128,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_F,  677+128,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_F,  677+128,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_F,  677+128,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_F,  681+128,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_F,  679+128,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_F,  679+128,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_F,  679+128,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_F,  679+128,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_F,  679+128,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_F,  679+128,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_F,  679+128,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_F,  679+128,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_F,  678+128,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_F,  678+128,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_F,  678+128,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_F,  679+128,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_F,  679+128,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_F,  680+128,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_F,  678+128,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_F,  680+128,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_F,  680+128,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_F,  679+128,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_F,  680+128,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_F,  679+128,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_F,  680+128,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_F,  679+128,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_F,  679+128,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_F,  679+128,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_F,  681+128,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_F,  681+128,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_F,  681+128,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_F,  681+128,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_F,  681+128,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_F,  681+128,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_F,  678+128,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_F,  681+128,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_F,  681+128,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_F,  679+128,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_F,  682+128,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_F,  678+128,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_F,  680+128,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_F,  680+128,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_F,  680+128,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_F,  680+128,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_F,  681+128,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_F,  681+128,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_F,  678+128,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_F,  678+128,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_F,  678+128,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_F,  680+128,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_F,  680+128,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_F,  680+128,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_F,  680+128,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_F,  678+128,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_F,  680+128,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_F,  678+128,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_F,  678+128,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_F,  677+128,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
 //   {0x5371,  3,  D_POS_F,  681+128,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
 //   {0x5372,  3,  D_POS_F,  681+128,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },

    {0x5201,  1,  D_POS_G,  676+160,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5202,  2,  D_POS_G,  676+160,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5203,  1,  D_POS_G,  676+160,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5301,  3,  D_POS_G,  676+160,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    // {0x5302,  3,  D_POS_G,  676+160,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5303,  2,  D_POS_G,  676+160,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5304,  2,  D_POS_G,  681+160,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5305,  3,  D_POS_G,  677+160,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5306,  3,  D_POS_G,  681+160,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU     },
    {0x5307,  3,  D_POS_G,  682+160,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5273,  2,  D_POS_G,  682 + 160,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_TCU    },
    {0x5308,  3,  D_POS_G,  682+160,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5309,  2,  D_POS_G,  678+160,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5310,  2,  D_POS_G,  678+160,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5311,  2,  D_POS_G,  680+160,   bit0,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5312,  2,  D_POS_G,  680+160,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5313,  3,  D_POS_G,  677+160,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5314,  2,  D_POS_G,  677+160,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5315,  3,  D_POS_G,  677+160,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5316,  3,  D_POS_G,  681+160,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5317,  3,  D_POS_G,  679+160,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5318,  2,  D_POS_G,  679+160,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5319,  3,  D_POS_G,  679+160,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5320,  3,  D_POS_G,  679+160,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5321,  2,  D_POS_G,  679+160,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5322,  3,  D_POS_G,  679+160,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5323,  3,  D_POS_G,  679+160,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5324,  3,  D_POS_G,  679+160,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5325,  3,  D_POS_G,  678+160,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5326,  3,  D_POS_G,  678+160,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5327,  3,  D_POS_G,  678+160,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5328,  3,  D_POS_G,  679+160,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5329,  3,  D_POS_G,  679+160,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5330,  3,  D_POS_G,  680+160,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5331,  1,  D_POS_G,  678+160,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5332,  3,  D_POS_G,  680+160,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5333,  3,  D_POS_G,  680+160,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5334,  3,  D_POS_G,  679+160,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5335,  2,  D_POS_G,  680+160,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5336,  3,  D_POS_G,  679+160,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5337,  3,  D_POS_G,  680+160,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5338,  3,  D_POS_G,  679+160,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5339,  3,  D_POS_G,  679+160,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5340,  3,  D_POS_G,  679+160,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5341,  3,  D_POS_G,  681+160,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5342,  3,  D_POS_G,  681+160,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5343,  2,  D_POS_G,  681+160,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5344,  2,  D_POS_G,  681+160,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5345,  2,  D_POS_G,  681+160,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5346,  2,  D_POS_G,  681+160,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5347,  2,  D_POS_G,  678+160,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5348,  2,  D_POS_G,  681+160,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5349,  2,  D_POS_G,  681+160,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5350,  3,  D_POS_G,  679+160,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5351,  3,  D_POS_G,  682+160,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5352,  2,  D_POS_G,  678+160,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5353,  3,  D_POS_G,  680+160,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5354,  3,  D_POS_G,  680+160,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5355,  2,  D_POS_G,  680+160,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5356,  3,  D_POS_G,  680+160,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5357,  3,  D_POS_G,  681+160,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5358,  3,  D_POS_G,  681+160,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5359,  3,  D_POS_G,  678+160,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5360,  3,  D_POS_G,  678+160,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5361,  3,  D_POS_G,  678+160,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5362,  2,  D_POS_G,  680+160,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5363,  2,  D_POS_G,  680+160,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5364,  2,  D_POS_G,  680+160,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5365,  2,  D_POS_G,  680+160,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5366,  3,  D_POS_G,  678+160,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5367,  3,  D_POS_G,  680+160,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5368,  3,  D_POS_G,  678+160,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5369,  3,  D_POS_G,  678+160,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_TCU    },
    {0x5370,  3,  D_POS_G,  677+160,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_TCU},
    {0x5371,  2,  D_POS_G,  681+160,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_TCU},
    {0x5372,  2,  D_POS_G,  681+160,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_TCU},

    {0x6101,  1,  D_POS_A, 881,   bit12,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6102,  1,  D_POS_A, 881,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6201,  1,  D_POS_A, 879,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6202,  1,  D_POS_A, 879,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6203,  1,  D_POS_A, 880,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6204,  1,  D_POS_A, 881,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6205,  1,  D_POS_A, 881,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
//    {0x6206,  2,  D_POS_A, 881,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
//    {0x6207,  2,  D_POS_A, 882,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
//    {0x6208,  2,  D_POS_A, 878,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6301,  3,  D_POS_A, 878,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6302,  3,  D_POS_A, 878,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6303,  3,  D_POS_A, 878,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6304,  3,  D_POS_A, 879,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6305,  3,  D_POS_A, 879,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },

    {0x6306,  1,  D_POS_A, 882,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6307,  3,  D_POS_A, 879,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6308,  3,  D_POS_A, 879,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6309,  1,  D_POS_A, 879,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630A,  3,  D_POS_A, 879,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630B,  3,  D_POS_A, 879,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630C,  3,  D_POS_A, 879,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630D,  3,  D_POS_A, 879,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630E,  3,  D_POS_A, 879,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630F,  3,  D_POS_A, 879,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6311,  3,  D_POS_A, 879,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6312,  1,  D_POS_A, 879,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6313,  3,  D_POS_A, 879,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6314,  3,  D_POS_A, 880,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6315,  3,  D_POS_A, 880,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6316,  3,  D_POS_A, 880,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6317,  3,  D_POS_A, 880,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6318,  3,  D_POS_A, 880,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6319,  3,  D_POS_A, 880,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631A,  3,  D_POS_A, 880,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631B,  3,  D_POS_A, 880,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631C,  3,  D_POS_A, 880,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631D,  3,  D_POS_A, 880,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631E,  1,  D_POS_A, 880,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631F,  3,  D_POS_A, 880,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6321,  3,  D_POS_A, 880,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6322,  3,  D_POS_A, 880,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6323,  3,  D_POS_A, 880,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6324,  3,  D_POS_A, 881,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6325,  3,  D_POS_A, 881,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6326,  3,  D_POS_A, 881,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6327,  3,  D_POS_A, 881,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6328,  3,  D_POS_A, 881,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6329,  3,  D_POS_A, 881,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632A,  3,  D_POS_A, 881,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632B,  3,  D_POS_A, 881,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632C,  3,  D_POS_A, 881,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632D,  3,  D_POS_A, 881,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632E,  3,  D_POS_A, 881,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632F,  1,  D_POS_A, 881,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6331,  3,  D_POS_A, 882,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6332,  3,  D_POS_A, 882,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6333,  3,  D_POS_A, 882,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },

    // added by Deng Ran on the 07th of July 2016
    {0x6230,  2,  D_POS_A, 882,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_ACU    },

    {0x6101,  1,  D_POS_H, 881+24,   bit12,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6102,  1,  D_POS_H, 881+24,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6201,  1,  D_POS_H, 879+24,   bit2,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6202,  1,  D_POS_H, 879+24,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6203,  1,  D_POS_H, 880+24,   bit11,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6204,  1,  D_POS_H, 881+24,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    {0x6205,  1,  D_POS_H, 881+24,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_ACU    },
    //    {0x6206,  2,  D_POS_H, 881+24,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    //    {0x6207,  2,  D_POS_H, 882+24,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    //    {0x6208,  2,  D_POS_H, 878+24,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6301,  3,  D_POS_H, 878+24,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6302,  3,  D_POS_H, 878+24,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6303,  3,  D_POS_H, 878+24,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6304,  3,  D_POS_H, 879+24,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6305,  3,  D_POS_H, 879+24,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },

    {0x6306,  1,  D_POS_H, 882+24,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6307,  3,  D_POS_H, 879+24,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6308,  3,  D_POS_H, 879+24,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6309,  1,  D_POS_H, 879+24,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630A,  3,  D_POS_H, 879+24,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630B,  3,  D_POS_H, 879+24,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630C,  3,  D_POS_H, 879+24,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630D,  3,  D_POS_H, 879+24,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630E,  3,  D_POS_H, 879+24,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x630F,  3,  D_POS_H, 879+24,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6311,  3,  D_POS_H, 879+24,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6312,  1,  D_POS_H, 879+24,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6313,  3,  D_POS_H, 879+24,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6314,  3,  D_POS_H, 880+24,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6315,  3,  D_POS_H, 880+24,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6316,  3,  D_POS_H, 880+24,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6317,  3,  D_POS_H, 880+24,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6318,  3,  D_POS_H, 880+24,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6319,  3,  D_POS_H, 880+24,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631A,  3,  D_POS_H, 880+24,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631B,  3,  D_POS_H, 880+24,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631C,  3,  D_POS_H, 880+24,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631D,  3,  D_POS_H, 880+24,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631E,  1,  D_POS_H, 880+24,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x631F,  3,  D_POS_H, 880+24,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6321,  3,  D_POS_H, 880+24,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6322,  3,  D_POS_H, 880+24,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6323,  3,  D_POS_H, 880+24,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6324,  3,  D_POS_H, 881+24,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6325,  3,  D_POS_H, 881+24,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6326,  3,  D_POS_H, 881+24,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6327,  3,  D_POS_H, 881+24,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6328,  3,  D_POS_H, 881+24,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6329,  3,  D_POS_H, 881+24,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632A,  3,  D_POS_H, 881+24,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632B,  3,  D_POS_H, 881+24,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632C,  3,  D_POS_H, 881+24,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632D,  3,  D_POS_H, 881+24,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632E,  3,  D_POS_H, 881+24,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x632F,  1,  D_POS_H, 881+24,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6331,  3,  D_POS_H, 882+24,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6332,  3,  D_POS_H, 882+24,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6333,  3,  D_POS_H, 882+24,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },

    // added by Deng Ran on the 07th of July 2016
    {0x6230,  2,  D_POS_H, 882 + 24,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_ACU    },

    {0x6334,  3,  D_POS_A, 18,    bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },
    {0x6334,  3,  D_POS_H, 146,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_ACU    },

    {0x7101,  1,  D_POS_A, 3187,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_A, 3179,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_A, 3180,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_A, 3181,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_A, 3182,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_A, 3183,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_A, 3184,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_A, 3185,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_A, 3186,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7191,  1,  D_POS_A, 3187,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A1,  1,  D_POS_A, 3188,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_A, 3179,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_A, 3180,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_A, 3181,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_A, 3182,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_A, 3183,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_A, 3184,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_A, 3185,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_A, 3186,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7192,  1,  D_POS_A, 3187,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A2,  1,  D_POS_A, 3188,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_A, 3179,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_A, 3180,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_A, 3181,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_A, 3182,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_A, 3183,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_A, 3184,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_A, 3185,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_A, 3186,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_A, 3187,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_A, 3188,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_A, 3162,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_A, 3163,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_A, 3164,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_A, 3165,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_A, 3166,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_A, 3167,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_A, 3168,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_A, 3169,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7193,  1,  D_POS_A, 3170,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A3,  1,  D_POS_A, 3171,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_A, 3179,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_A, 3180,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_A, 3181,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_A, 3182,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_A, 3183,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_A, 3184,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_A, 3185,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_A, 3186,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7291,  1,  D_POS_A, 3187,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A1,  1,  D_POS_A, 3188,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_A, 3179,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_A, 3180,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_A, 3181,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_A, 3182,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_A, 3183,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_A, 3184,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_A, 3185,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_A, 3186,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7292, 1,  D_POS_A, 3187,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A2,  1,  D_POS_A, 3188,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_A, 3179,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_A, 3180,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_A, 3181,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_A, 3182,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_A, 3183,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_A, 3184,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_A, 3185,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_A, 3186,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7293,  1,  D_POS_A, 3187,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A3, 1,  D_POS_A, 3188,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_A, 3162,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_A, 3163,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_A, 3164,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_A, 3165,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_A, 3166,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_A, 3167,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_A, 3168,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_A, 3169,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7391,  1,  D_POS_A, 3170,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x73A1,  1,  D_POS_A, 3171,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_A, 3179,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_A, 3180,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_A, 3181,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_A, 3182,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_A, 3183,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_A, 3184,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_A, 3185,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_A, 3186,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_A, 3187,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_A, 3188,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_A, 3179,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_A, 3180,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_A, 3181,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_A, 3182,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_A, 3183,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_A, 3184,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_A, 3185,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_A, 3186,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_A, 3179,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_A, 3180,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_A, 3181,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_A, 3182,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_A, 3183,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_A, 3184,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_A, 3185,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_A, 3186,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_A, 3179,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_A, 3180,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_A, 3181,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_A, 3182,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_A, 3183,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_A, 3184,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_A, 3185,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_A, 3186,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_A, 3179,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_A, 3180,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_A, 3181,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_A, 3182,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_A, 3183,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_A, 3184,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_A, 3185,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_A, 3186,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_A, 3179,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_A, 3180,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_A, 3181,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_A, 3182,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_A, 3183,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_A, 3184,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_A, 3185,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_A, 3186,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_A, 3179,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_A, 3180,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_A, 3181,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_A, 3182,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_A, 3183,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_A, 3184,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_A, 3185,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_A, 3186,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_A, 3179,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_A, 3180,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_A, 3181,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_A, 3182,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_A, 3183,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_A, 3184,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_A, 3185,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_A, 3186,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },


    {0x7101,  1,  D_POS_B, 3187+32,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_B, 3179+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_B, 3180+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_B, 3181+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_B, 3182+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_B, 3183+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_B, 3184+32,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_B, 3185+32,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_B, 3186+32,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_B, 3187+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_B, 3188+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_B, 3179+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_B, 3180+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_B, 3181+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_B, 3182+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_B, 3183+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_B, 3184+32,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_B, 3185+32,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_B, 3186+32,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_B, 3187+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_B, 3188+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_B, 3179+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_B, 3180+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_B, 3181+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_B, 3182+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_B, 3183+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_B, 3184+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_B, 3185+32,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_B, 3186+32,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_B, 3187+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_B, 3188+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_B, 3162+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_B, 3163+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_B, 3164+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_B, 3165+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_B, 3166+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_B, 3167+32,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_B, 3168+32,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_B, 3169+32,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_B, 3170+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_B, 3171+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_B, 3179+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_B, 3180+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_B, 3181+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_B, 3182+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_B, 3183+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_B, 3184+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_B, 3185+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_B, 3186+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_B, 3187+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_B, 3188+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_B, 3179+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_B, 3180+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_B, 3181+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_B, 3182+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_B, 3183+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_B, 3184+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_B, 3185+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_B, 3186+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_B, 3187+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_B, 3188+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_B, 3179+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_B, 3180+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_B, 3181+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_B, 3182+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_B, 3183+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_B, 3184+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_B, 3185+32,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_B, 3186+32,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_B, 3187+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_B, 3188+32,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_B, 3162+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_B, 3163+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_B, 3164+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_B, 3165+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_B, 3166+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_B, 3167+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_B, 3168+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_B, 3169+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_B, 3170+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_B, 3171+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_B, 3179+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_B, 3180+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_B, 3181+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_B, 3182+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_B, 3183+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_B, 3184+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_B, 3185+32,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_B, 3186+32,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_B, 3187+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_B, 3188+32,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_B, 3179+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_B, 3180+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_B, 3181+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_B, 3182+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_B, 3183+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_B, 3184+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_B, 3185+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_B, 3186+32,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_B, 3179+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_B, 3180+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_B, 3181+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_B, 3182+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_B, 3183+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_B, 3184+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_B, 3185+32,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_B, 3186+32,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_B, 3179+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_B, 3180+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_B, 3181+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_B, 3182+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_B, 3183+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_B, 3184+32,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_B, 3185+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_B, 3186+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_B, 3179+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_B, 3180+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_B, 3181+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_B, 3182+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_B, 3183+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_B, 3184+32,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_B, 3185+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_B, 3186+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_B, 3179+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_B, 3180+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_B, 3181+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_B, 3182+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_B, 3183+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_B, 3184+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_B, 3185+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_B, 3186+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_B, 3179+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_B, 3180+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_B, 3181+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_B, 3182+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_B, 3183+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_B, 3184+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_B, 3185+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_B, 3186+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_B, 3179+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_B, 3180+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_B, 3181+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_B, 3182+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_B, 3183+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_B, 3184+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_B, 3185+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_B, 3186+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_C, 3187+64,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_C, 3179+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_C, 3180+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_C, 3181+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_C, 3182+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_C, 3183+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_C, 3184+64,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_C, 3185+64,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_C, 3186+64,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_C, 3187+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_C, 3188+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_C, 3179+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_C, 3180+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_C, 3181+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_C, 3182+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_C, 3183+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_C, 3184+64,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_C, 3185+64,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_C, 3186+64,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_C, 3187+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_C, 3188+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_C, 3179+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_C, 3180+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_C, 3181+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_C, 3182+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_C, 3183+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_C, 3184+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_C, 3185+64,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_C, 3186+64,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_C, 3187+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_C, 3188+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_C, 3162+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_C, 3163+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_C, 3164+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_C, 3165+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_C, 3166+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_C, 3167+64,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_C, 3168+64,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_C, 3169+64,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_C, 3170+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_C, 3171+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_C, 3179+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_C, 3180+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_C, 3181+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_C, 3182+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_C, 3183+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_C, 3184+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_C, 3185+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_C, 3186+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_C, 3187+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_C, 3188+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_C, 3179+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_C, 3180+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_C, 3181+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_C, 3182+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_C, 3183+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_C, 3184+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_C, 3185+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_C, 3186+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_C, 3187+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_C, 3188+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_C, 3179+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_C, 3180+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_C, 3181+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_C, 3182+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_C, 3183+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_C, 3184+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_C, 3185+64,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_C, 3186+64,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_C, 3187+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_C, 3188+64,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_C, 3162+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_C, 3163+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_C, 3164+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_C, 3165+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_C, 3166+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_C, 3167+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_C, 3168+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_C, 3169+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_C, 3170+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_C, 3171+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_C, 3179+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_C, 3180+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_C, 3181+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_C, 3182+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_C, 3183+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_C, 3184+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_C, 3185+64,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_C, 3186+64,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_C, 3187+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_C, 3188+64,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_C, 3179+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_C, 3180+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_C, 3181+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_C, 3182+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_C, 3183+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_C, 3184+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_C, 3185+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_C, 3186+64,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_C, 3179+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_C, 3180+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_C, 3181+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_C, 3182+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_C, 3183+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_C, 3184+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_C, 3185+64,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_C, 3186+64,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_C, 3179+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_C, 3180+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_C, 3181+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_C, 3182+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_C, 3183+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_C, 3184+64,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_C, 3185+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_C, 3186+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_C, 3179+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_C, 3180+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_C, 3181+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_C, 3182+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_C, 3183+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_C, 3184+64,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_C, 3185+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_C, 3186+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_C, 3179+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_C, 3180+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_C, 3181+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_C, 3182+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_C, 3183+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_C, 3184+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_C, 3185+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_C, 3186+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_C, 3179+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_C, 3180+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_C, 3181+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_C, 3182+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_C, 3183+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_C, 3184+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_C, 3185+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_C, 3186+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_C, 3179+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_C, 3180+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_C, 3181+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_C, 3182+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_C, 3183+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_C, 3184+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_C, 3185+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_C, 3186+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_D, 3187+96,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_D, 3179+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_D, 3180+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_D, 3181+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_D, 3182+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_D, 3183+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_D, 3184+96,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_D, 3185+96,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_D, 3186+96,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_D, 3187+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_D, 3188+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_D, 3179+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_D, 3180+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_D, 3181+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_D, 3182+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_D, 3183+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_D, 3184+96,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_D, 3185+96,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_D, 3186+96,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_D, 3187+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_D, 3188+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_D, 3179+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_D, 3180+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_D, 3181+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_D, 3182+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_D, 3183+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_D, 3184+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_D, 3185+96,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_D, 3186+96,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_D, 3187+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_D, 3188+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_D, 3162+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_D, 3163+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_D, 3164+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_D, 3165+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_D, 3166+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_D, 3167+96,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_D, 3168+96,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_D, 3169+96,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_D, 3170+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_D, 3171+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_D, 3179+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_D, 3180+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_D, 3181+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_D, 3182+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_D, 3183+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_D, 3184+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_D, 3185+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_D, 3186+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_D, 3187+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_D, 3188+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_D, 3179+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_D, 3180+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_D, 3181+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_D, 3182+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_D, 3183+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_D, 3184+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_D, 3185+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_D, 3186+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_D, 3187+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_D, 3188+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_D, 3179+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_D, 3180+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_D, 3181+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_D, 3182+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_D, 3183+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_D, 3184+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_D, 3185+96,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_D, 3186+96,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_D, 3187+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_D, 3188+96,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_D, 3162+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_D, 3163+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_D, 3164+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_D, 3165+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_D, 3166+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_D, 3167+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_D, 3168+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_D, 3169+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_D, 3170+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_D, 3171+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_D, 3179+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_D, 3180+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_D, 3181+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_D, 3182+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_D, 3183+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_D, 3184+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_D, 3185+96,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_D, 3186+96,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_D, 3187+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_D, 3188+96,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_D, 3179+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_D, 3180+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_D, 3181+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_D, 3182+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_D, 3183+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_D, 3184+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_D, 3185+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_D, 3186+96,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_D, 3179+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_D, 3180+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_D, 3181+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_D, 3182+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_D, 3183+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_D, 3184+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_D, 3185+96,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_D, 3186+96,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_D, 3179+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_D, 3180+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_D, 3181+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_D, 3182+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_D, 3183+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_D, 3184+96,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_D, 3185+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_D, 3186+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_D, 3179+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_D, 3180+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_D, 3181+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_D, 3182+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_D, 3183+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_D, 3184+96,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_D, 3185+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_D, 3186+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_D, 3179+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_D, 3180+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_D, 3181+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_D, 3182+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_D, 3183+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_D, 3184+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_D, 3185+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_D, 3186+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_D, 3179+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_D, 3180+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_D, 3181+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_D, 3182+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_D, 3183+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_D, 3184+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_D, 3185+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_D, 3186+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_D, 3179+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_D, 3180+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_D, 3181+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_D, 3182+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_D, 3183+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_D, 3184+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_D, 3185+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_D, 3186+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_E, 3187+128 ,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_E, 3179+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_E, 3180+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_E, 3181+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_E, 3182+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_E, 3183+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_E, 3184+128 ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_E, 3185+128 ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_E, 3186+128 ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_E, 3187+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_E, 3188+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_E, 3179+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_E, 3180+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_E, 3181+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_E, 3182+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_E, 3183+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_E, 3184+128 ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_E, 3185+128 ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_E, 3186+128 ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_E, 3187+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_E, 3188+128 ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_E, 3179+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_E, 3180+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_E, 3181+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_E, 3182+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_E, 3183+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_E, 3184+128 ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_E, 3185+128 ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_E, 3186+128 ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_E, 3187+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_E, 3188+128 ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_E, 3162+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_E, 3163+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_E, 3164+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_E, 3165+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_E, 3166+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_E, 3167+128 ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_E, 3168+128 ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_E, 3169+128 ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_E, 3170+128 ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_E, 3171+128 ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_E, 3179+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_E, 3180+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_E, 3181+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_E, 3182+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_E, 3183+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_E, 3184+128 ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_E, 3185+128 ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_E, 3186+128 ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_E, 3187+128 ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_E, 3188+128 ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_E, 3179+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_E, 3180+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_E, 3181+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_E, 3182+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_E, 3183+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_E, 3184+128 ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_E, 3185+128 ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_E, 3186+128 ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_E, 3187+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_E, 3188+128 ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_E, 3179+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_E, 3180+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_E, 3181+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_E, 3182+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_E, 3183+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_E, 3184+128 ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_E, 3185+128 ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_E, 3186+128 ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_E, 3187+128 ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_E, 3188+128 ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_E, 3162+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_E, 3163+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_E, 3164+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_E, 3165+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_E, 3166+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_E, 3167+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_E, 3168+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_E, 3169+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_E, 3170+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_E, 3171+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_E, 3179+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_E, 3180+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_E, 3181+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_E, 3182+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_E, 3183+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_E, 3184+128 ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_E, 3185+128 ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_E, 3186+128 ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_E, 3187+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_E, 3188+128 ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_E, 3179+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_E, 3180+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_E, 3181+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_E, 3182+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_E, 3183+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_E, 3184+128 ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_E, 3185+128 ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_E, 3186+128 ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_E, 3179+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_E, 3180+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_E, 3181+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_E, 3182+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_E, 3183+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_E, 3184+128 ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_E, 3185+128 ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_E, 3186+128 ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_E, 3179+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_E, 3180+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_E, 3181+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_E, 3182+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_E, 3183+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_E, 3184+128 ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_E, 3185+128 ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_E, 3186+128 ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_E, 3179+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_E, 3180+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_E, 3181+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_E, 3182+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_E, 3183+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_E, 3184+128 ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_E, 3185+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_E, 3186+128 ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_E, 3179+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_E, 3180+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_E, 3181+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_E, 3182+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_E, 3183+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_E, 3184+128 ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_E, 3185+128 ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_E, 3186+128 ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_E, 3179+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_E, 3180+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_E, 3181+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_E, 3182+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_E, 3183+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_E, 3184+128 ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_E, 3185+128 ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_E, 3186+128 ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_E, 3179+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_E, 3180+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_E, 3181+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_E, 3182+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_E, 3183+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_E, 3184+128 ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_E, 3185+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_E, 3186+128 ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_F, 3187+160  ,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_F, 3179+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_F, 3180+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_F, 3181+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_F, 3182+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_F, 3183+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_F, 3184+160  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_F, 3185+160  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_F, 3186+160  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_F, 3187+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_F, 3188+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_F, 3179+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_F, 3180+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_F, 3181+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_F, 3182+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_F, 3183+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_F, 3184+160  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_F, 3185+160  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_F, 3186+160  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_F, 3187+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_F, 3188+160  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_F, 3179+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_F, 3180+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_F, 3181+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_F, 3182+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_F, 3183+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_F, 3184+160  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_F, 3185+160  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_F, 3186+160  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_F, 3187+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_F, 3188+160  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_F, 3162+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_F, 3163+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_F, 3164+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_F, 3165+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_F, 3166+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_F, 3167+160  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_F, 3168+160  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_F, 3169+160  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_F, 3170+160  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_F, 3171+160  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_F, 3179+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_F, 3180+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_F, 3181+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_F, 3182+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_F, 3183+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_F, 3184+160  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_F, 3185+160  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_F, 3186+160  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_F, 3187+160  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_F, 3188+160  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_F, 3179+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_F, 3180+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_F, 3181+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_F, 3182+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_F, 3183+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_F, 3184+160  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_F, 3185+160  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_F, 3186+160  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_F, 3187+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_F, 3188+160  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_F, 3179+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_F, 3180+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_F, 3181+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_F, 3182+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_F, 3183+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_F, 3184+160  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_F, 3185+160  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_F, 3186+160  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_F, 3187+160  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_F, 3188+160  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_F, 3162+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_F, 3163+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_F, 3164+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_F, 3165+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_F, 3166+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_F, 3167+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_F, 3168+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_F, 3169+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_F, 3170+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_F, 3171+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_F, 3179+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_F, 3180+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_F, 3181+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_F, 3182+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_F, 3183+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_F, 3184+160  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_F, 3185+160  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_F, 3186+160  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_F, 3187+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_F, 3188+160  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_F, 3179+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_F, 3180+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_F, 3181+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_F, 3182+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_F, 3183+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_F, 3184+160  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_F, 3185+160  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_F, 3186+160  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_F, 3179+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_F, 3180+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_F, 3181+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_F, 3182+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_F, 3183+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_F, 3184+160  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_F, 3185+160  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_F, 3186+160  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_F, 3179+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_F, 3180+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_F, 3181+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_F, 3182+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_F, 3183+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_F, 3184+160  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_F, 3185+160  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_F, 3186+160  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_F, 3179+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_F, 3180+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_F, 3181+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_F, 3182+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_F, 3183+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_F, 3184+160  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_F, 3185+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_F, 3186+160  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_F, 3179+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_F, 3180+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_F, 3181+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_F, 3182+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_F, 3183+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_F, 3184+160  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_F, 3185+160  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_F, 3186+160  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_F, 3179+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_F, 3180+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_F, 3181+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_F, 3182+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_F, 3183+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_F, 3184+160  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_F, 3185+160  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_F, 3186+160  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_F, 3179+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_F, 3180+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_F, 3181+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_F, 3182+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_F, 3183+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_F, 3184+160  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_F, 3185+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_F, 3186+160  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_G, 3187+192  ,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_G, 3179+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_G, 3180+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_G, 3181+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_G, 3182+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_G, 3183+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_G, 3184+192  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_G, 3185+192  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_G, 3186+192  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7191,  1,  D_POS_G, 3187+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A1,  1,  D_POS_G, 3188+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_G, 3179+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_G, 3180+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_G, 3181+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_G, 3182+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_G, 3183+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_G, 3184+192  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_G, 3185+192  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_G, 3186+192  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_G, 3187+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_G, 3188+192  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_G, 3179+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_G, 3180+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_G, 3181+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_G, 3182+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_G, 3183+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_G, 3184+192  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_G, 3185+192  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_G, 3186+192  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_G, 3187+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_G, 3188+192  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_G, 3162+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_G, 3163+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_G, 3164+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_G, 3165+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_G, 3166+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_G, 3167+192  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_G, 3168+192  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_G, 3169+192  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7193,  1,  D_POS_G, 3170+192  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A3,  1,  D_POS_G, 3171+192  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_G, 3179+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_G, 3180+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_G, 3181+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_G, 3182+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_G, 3183+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_G, 3184+192  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_G, 3185+192  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_G, 3186+192  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7291,  2,  D_POS_G, 3187+192  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A1,  2,  D_POS_G, 3188+192  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_G, 3179+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222, 1,  D_POS_G, 3180+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232, 1,  D_POS_G, 3181+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242, 1,  D_POS_G, 3182+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252, 1,  D_POS_G, 3183+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262, 1,  D_POS_G, 3184+192  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_G, 3185+192  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_G, 3186+192  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7292, 1,  D_POS_G, 3187+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A2,  2,  D_POS_G, 3188+192  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_G, 3179+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_G, 3180+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_G, 3181+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_G, 3182+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_G, 3183+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_G, 3184+192  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_G, 3185+192  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_G, 3186+192  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7293,  2,  D_POS_G, 3187+192  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x72A3, 1,  D_POS_G, 3188+192  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_G, 3162+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_G, 3163+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_G, 3164+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_G, 3165+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_G, 3166+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_G, 3167+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_G, 3168+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_G, 3169+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7391,  3,  D_POS_G, 3170+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x73A1,  3,  D_POS_G, 3171+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_G, 3179+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_G, 3180+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_G, 3181+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_G, 3182+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_G, 3183+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_G, 3184+192  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_G, 3185+192  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_G, 3186+192  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_G, 3187+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_G, 3188+192  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_G, 3179+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_G, 3180+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_G, 3181+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_G, 3182+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_G, 3183+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_G, 3184+192  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_G, 3185+192  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_G, 3186+192  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_G, 3179+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_G, 3180+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_G, 3181+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_G, 3182+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_G, 3183+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_G, 3184+192  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_G, 3185+192  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_G, 3186+192  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_G, 3179+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_G, 3180+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_G, 3181+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_G, 3182+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_G, 3183+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_G, 3184+192  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_G, 3185+192  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_G, 3186+192  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_G, 3179+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_G, 3180+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_G, 3181+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_G, 3182+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_G, 3183+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_G, 3184+192  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_G, 3185+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_G, 3186+192  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_G, 3179+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_G, 3180+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_G, 3181+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_G, 3182+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_G, 3183+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_G, 3184+192  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_G, 3185+192  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_G, 3186+192  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_G, 3179+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_G, 3180+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_G, 3181+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_G, 3182+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_G, 3183+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_G, 3184+192  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_G, 3185+192  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_G, 3186+192  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_G, 3179+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_G, 3180+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_G, 3181+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_G, 3182+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_G, 3183+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_G, 3184+192  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_G, 3185+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_G, 3186+192  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7101,  1,  D_POS_H, 3187+224  ,   bit7,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7111,  1,  D_POS_H, 3179+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7121,  1,  D_POS_H, 3180+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7131,  1,  D_POS_H, 3181+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7141,  1,  D_POS_H, 3182+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7151,  1,  D_POS_H, 3183+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7161,  1,  D_POS_H, 3184+224  ,   bit0,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7171,  1,  D_POS_H, 3185+224  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7181,  1,  D_POS_H, 3186+224  ,   bit0,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7191,  1,  D_POS_H, 3187+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A1,  1,  D_POS_H, 3188+224  ,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7112,  1,  D_POS_H, 3179+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7122,  1,  D_POS_H, 3180+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7132,  1,  D_POS_H, 3181+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7142,  1,  D_POS_H, 3182+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7152,  1,  D_POS_H, 3183+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7162,  1,  D_POS_H, 3184+224  ,   bit15,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7172,  1,  D_POS_H, 3185+224  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7182,  1,  D_POS_H, 3186+224  ,   bit15,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7192,  1,  D_POS_H, 3187+224  ,   bit9,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A2,  1,  D_POS_H, 3188+224  ,   bit1,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
//    {0x7112,  1,  D_POS_H, 3179+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7122,  1,  D_POS_H, 3180+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7132,  1,  D_POS_H, 3181+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7142,  1,  D_POS_H, 3182+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7152,  1,  D_POS_H, 3183+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7162,  1,  D_POS_H, 3184+224  ,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7172,  1,  D_POS_H, 3185+224  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7182,  1,  D_POS_H, 3186+224  ,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x7192,  1,  D_POS_H, 3187+224  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
//    {0x71A2,  1,  D_POS_H, 3188+224  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7113,  1,  D_POS_H, 3162+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7123,  1,  D_POS_H, 3163+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7133,  1,  D_POS_H, 3164+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7143,  1,  D_POS_H, 3165+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7153,  1,  D_POS_H, 3166+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7163,  1,  D_POS_H, 3167+224  ,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7173,  1,  D_POS_H, 3168+224  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7183,  1,  D_POS_H, 3169+224  ,   bit10,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7193,  1,  D_POS_H, 3170+224  ,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x71A3,  1,  D_POS_H, 3171+224  ,   bit13,  false,  false, true,  E_FAULTS_CATEGORY_DCU    },
    {0x7211,  1,  D_POS_H, 3179+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7221,  1,  D_POS_H, 3180+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7231,  1,  D_POS_H, 3181+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7241,  1,  D_POS_H, 3182+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7251,  1,  D_POS_H, 3183+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7261,  1,  D_POS_H, 3184+224  ,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7271,  1,  D_POS_H, 3185+224  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7281,  1,  D_POS_H, 3186+224  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7291,  1,  D_POS_H, 3187+224  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A1,  1,  D_POS_H, 3188+224  ,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7212,  1,  D_POS_H, 3179+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7222,  1,  D_POS_H, 3180+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7232,  1,  D_POS_H, 3181+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7242,  1,  D_POS_H, 3182+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7252,  1,  D_POS_H, 3183+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7262,  1,  D_POS_H, 3184+224  ,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7272, 1,  D_POS_H, 3185+224  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7282, 1,  D_POS_H, 3186+224  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7292, 1,  D_POS_H, 3187+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A2,  1,  D_POS_H, 3188+224  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7213, 1,  D_POS_H, 3179+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7223, 1,  D_POS_H, 3180+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7233, 1,  D_POS_H, 3181+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7243, 1,  D_POS_H, 3182+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7253, 1,  D_POS_H, 3183+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7263, 1,  D_POS_H, 3184+224  ,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7273, 1,  D_POS_H, 3185+224  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7283, 1,  D_POS_H, 3186+224  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7293,  1,  D_POS_H, 3187+224  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x72A3, 1,  D_POS_H, 3188+224  ,   bit3,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7311, 1,  D_POS_H, 3162+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7321, 1,  D_POS_H, 3163+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7331, 1,  D_POS_H, 3164+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7341, 1,  D_POS_H, 3165+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7351, 1,  D_POS_H, 3166+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7361, 1,  D_POS_H, 3167+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7371, 1,  D_POS_H, 3168+224  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7381, 1,  D_POS_H, 3169+224  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7391,  1,  D_POS_H, 3170+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x73A1,  1,  D_POS_H, 3171+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7312,  3,  D_POS_H, 3179+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7322,  3,  D_POS_H, 3180+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7332,  3,  D_POS_H, 3181+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7342,  3,  D_POS_H, 3182+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7352,  3,  D_POS_H, 3183+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7362,  3,  D_POS_H, 3184+224  ,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7372,  3,  D_POS_H, 3185+224  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7382,  3,  D_POS_H, 3186+224  ,   bit2,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x7392,  3,  D_POS_H, 3187+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    //{0x73A2,  3,  D_POS_H, 3188+224  ,   bit4,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7313,  3,  D_POS_H, 3179+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7323,  3,  D_POS_H, 3180+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7333,  3,  D_POS_H, 3181+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7343,  3,  D_POS_H, 3182+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7353,  3,  D_POS_H, 3183+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7363,  3,  D_POS_H, 3184+224  ,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7373,  3,  D_POS_H, 3185+224  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7383,  3,  D_POS_H, 3186+224  ,   bit1,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7314, 1,  D_POS_H, 3179+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7324, 1,  D_POS_H, 3180+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7334, 1,  D_POS_H, 3181+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7344, 1,  D_POS_H, 3182+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7354, 1,  D_POS_H, 3183+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7364, 1,  D_POS_H, 3184+224  ,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7374, 1,  D_POS_H, 3185+224  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7384, 1,  D_POS_H, 3186+224  ,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7315, 2,  D_POS_H, 3179+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7325, 2,  D_POS_H, 3180+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7335, 2,  D_POS_H, 3181+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7345, 2,  D_POS_H, 3182+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7355, 2,  D_POS_H, 3183+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7365, 2,  D_POS_H, 3184+224  ,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7375, 2,  D_POS_H, 3185+224  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7385, 2,  D_POS_H, 3186+224  ,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7316, 2,  D_POS_H, 3179+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7326, 2,  D_POS_H, 3180+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7336, 2,  D_POS_H, 3181+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7346, 2,  D_POS_H, 3182+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7356, 2,  D_POS_H, 3183+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7366, 2,  D_POS_H, 3184+224  ,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7376, 2,  D_POS_H, 3185+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7386, 2,  D_POS_H, 3186+224  ,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7317, 2,  D_POS_H, 3179+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7327, 2,  D_POS_H, 3180+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7337, 2,  D_POS_H, 3181+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7347,  2,  D_POS_H, 3182+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7357,  2,  D_POS_H, 3183+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7367,  2,  D_POS_H, 3184+224  ,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7377,  2,  D_POS_H, 3185+224  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7387,  2,  D_POS_H, 3186+224  ,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7318,  2,  D_POS_H, 3179+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7328,  2,  D_POS_H, 3180+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7338,  2,  D_POS_H, 3181+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7348,  2,  D_POS_H, 3182+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7358,  2,  D_POS_H, 3183+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7368,  2,  D_POS_H, 3184+224  ,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7378,  2,  D_POS_H, 3185+224  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7388,  2,  D_POS_H, 3186+224  ,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    {0x7319,  2,  D_POS_H, 3179+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7329,  2,  D_POS_H, 3180+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7339,  2,  D_POS_H, 3181+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7349,  2,  D_POS_H, 3182+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7359,  2,  D_POS_H, 3183+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7369,  2,  D_POS_H, 3184+224  ,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7379,  2,  D_POS_H, 3185+224  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },
    {0x7389,  2,  D_POS_H, 3186+224  ,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_DCU    },

    // code, level, car, word, bit, flag, confirm, confirm flag, device
    // added by Deng Ran on the 09th of April 2015.
    // changed by Deng Ran on the 06th of June 2015.
    {0x731A, 3, D_POS_A, 3176 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_A, 3176 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_A, 3176 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_A, 3176 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_A, 3176 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_A, 3176 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_A, 3176 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_A, 3176 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_B, 3208 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_B, 3208 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_B, 3208 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_B, 3208 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_B, 3208 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_B, 3208 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_B, 3208 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_B, 3208 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_C, 3240 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_C, 3240 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_C, 3240 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_C, 3240 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_C, 3240 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_C, 3240 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_C, 3240 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_C, 3240 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_D, 3272 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_D, 3272 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_D, 3272 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_D, 3272 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_D, 3272 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_D, 3272 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_D, 3272 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_D, 3272 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_E, 3304 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_E, 3304 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_E, 3304 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_E, 3304 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_E, 3304 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_E, 3304 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_E, 3304 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_E, 3304 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_F, 3336 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_F, 3336 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_F, 3336 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_F, 3336 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_F, 3336 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_F, 3336 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_F, 3336 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_F, 3336 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_G, 3368 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_G, 3368 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_G, 3368 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_G, 3368 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_G, 3368 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_G, 3368 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_G, 3368 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_G, 3368 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731A, 3, D_POS_H, 3400 + 12, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732A, 3, D_POS_H, 3400 + 12, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733A, 3, D_POS_H, 3400 + 12, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734A, 3, D_POS_H, 3400 + 12, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735A, 3, D_POS_H, 3400 + 12, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736A, 3, D_POS_H, 3400 + 12, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737A, 3, D_POS_H, 3400 + 12, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738A, 3, D_POS_H, 3400 + 12, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    // added by Deng Ran on the 09th of April 2015.
    // changed by Deng Ran on the 06th of June 2015.
    {0x731B, 3, D_POS_A, 3176 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_A, 3176 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_A, 3176 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_A, 3176 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_A, 3176 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_A, 3176 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_A, 3176 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_A, 3176 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_B, 3208 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_B, 3208 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_B, 3208 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_B, 3208 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_B, 3208 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_B, 3208 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_B, 3208 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_B, 3208 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_C, 3240 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_C, 3240 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_C, 3240 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_C, 3240 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_C, 3240 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_C, 3240 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_C, 3240 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_C, 3240 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_D, 3272 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_D, 3272 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_D, 3272 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_D, 3272 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_D, 3272 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_D, 3272 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_D, 3272 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_D, 3272 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_E, 3304 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_E, 3304 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_E, 3304 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_E, 3304 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_E, 3304 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_E, 3304 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_E, 3304 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_E, 3304 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_F, 3336 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_F, 3336 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_F, 3336 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_F, 3336 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_F, 3336 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_F, 3336 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_F, 3336 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_F, 3336 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_G, 3368 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_G, 3368 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_G, 3368 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_G, 3368 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_G, 3368 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_G, 3368 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_G, 3368 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_G, 3368 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731B, 3, D_POS_H, 3400 + 13, bit7, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732B, 3, D_POS_H, 3400 + 13, bit6, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733B, 3, D_POS_H, 3400 + 13, bit5, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734B, 3, D_POS_H, 3400 + 13, bit4, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735B, 3, D_POS_H, 3400 + 13, bit3, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736B, 3, D_POS_H, 3400 + 13, bit2, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737B, 3, D_POS_H, 3400 + 13, bit1, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738B, 3, D_POS_H, 3400 + 13, bit0, false, false, false, E_FAULTS_CATEGORY_DCU},

    // added by Deng Ran on the 09th of April 2015.
    // changed by Deng Ran on the 06th of June 2015.
    {0x731C, 3, D_POS_A, 3176 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_A, 3176 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_A, 3176 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_A, 3176 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_A, 3176 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_A, 3176 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_A, 3176 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_A, 3176 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_B, 3208 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_B, 3208 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_B, 3208 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_B, 3208 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_B, 3208 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_B, 3208 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_B, 3208 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_B, 3208 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_C, 3240 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_C, 3240 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_C, 3240 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_C, 3240 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_C, 3240 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_C, 3240 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_C, 3240 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_C, 3240 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_D, 3272 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_D, 3272 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_D, 3272 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_D, 3272 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_D, 3272 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_D, 3272 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_D, 3272 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_D, 3272 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_E, 3304 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_E, 3304 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_E, 3304 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_E, 3304 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_E, 3304 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_E, 3304 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_E, 3304 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_E, 3304 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_F, 3336 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_F, 3336 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_F, 3336 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_F, 3336 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_F, 3336 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_F, 3336 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_F, 3336 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_F, 3336 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_G, 3368 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_G, 3368 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_G, 3368 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_G, 3368 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_G, 3368 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_G, 3368 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_G, 3368 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_G, 3368 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},

    {0x731C, 3, D_POS_H, 3400 + 13, bit15, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x732C, 3, D_POS_H, 3400 + 13, bit14, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x733C, 3, D_POS_H, 3400 + 13, bit13, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x734C, 3, D_POS_H, 3400 + 13, bit12, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x735C, 3, D_POS_H, 3400 + 13, bit11, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x736C, 3, D_POS_H, 3400 + 13, bit10, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x737C, 3, D_POS_H, 3400 + 13, bit9, false, false, false, E_FAULTS_CATEGORY_DCU},
    {0x738C, 3, D_POS_H, 3400 + 13, bit8, false, false, false, E_FAULTS_CATEGORY_DCU},


    {0x8301, 2,  D_POS_A, 1450,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_A, 1450,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_A, 1450,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_A, 1450,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_A, 1449,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_A, 1449,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_A, 1449,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_A, 1449,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_A, 135,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_A, 135,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_A, 135,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_A, 135,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_A, 1450,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_A, 1450,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_A, 1451,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_A, 1451,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_A, 1449,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_A, 1449,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_A, 1450,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_A, 1450,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_A, 1450,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_A, 1450,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_A, 1450,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_A, 1450,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_A, 1450,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_A, 1450,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_A, 1450,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_A, 1450,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_B,  1450+16,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_B,  1450+16,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_B,  1450+16,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_B,  1450+16,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_B,  1449+16,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_B,  1449+16,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_B,  1449+16,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_B,  1449+16,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_B,  135+16,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_B,  135+16,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_B,  135+16,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_B,  135+16,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_B,  1450+16,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_B,  1450+16,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_B,  1451+16,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_B,  1451+16,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_B,  1449+16,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_B,  1449+16,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_B,  1450+16,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_B,  1450+16,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_B,  1450+16,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_B,  1450+16,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_B,  1450+16,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_B,  1450+16,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_B,  1450+16,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_B,  1450+16,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_B,  1450+16,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_B,  1450+16,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_C,  1450+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_C,  1450+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_C,  1450+32,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_C,  1450+32,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_C,  1449+32,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_C,  1449+32,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_C,  1449+32,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_C,  1449+32,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_C,  135+32,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_C,  135+32,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_C,  135+32,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_C,  135+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_C,  1450+32,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_C,  1450+32,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_C,  1451+32,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_C,  1451+32,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_C,  1449+32,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_C,  1449+32,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_C,  1450+32,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_C,  1450+32,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_C,  1450+32,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_C,  1450+32,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_C,  1450+32,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_C,  1450+32,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_C,  1450+32,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_C,  1450+32,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_C,  1450+32,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_C,  1450+32,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_D,  1450+48,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_D,  1450+48,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_D,  1450+48,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_D,  1450+48,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_D,  1449+48,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_D,  1449+48,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_D,  1449+48,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_D,  1449+48,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_D,  135+48,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_D,  135+48,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_D,  135+48,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_D,  135+48,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_D,  1450+48,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_D,  1450+48,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_D,  1451+48,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_D,  1451+48,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_D,  1449+48,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_D,  1449+48,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_D,  1450+48,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_D,  1450+48,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_D,  1450+48,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_D,  1450+48,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_D,  1450+48,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_D,  1450+48,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_D,  1450+48,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_D,  1450+48,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_D,  1450+48,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_D,  1450+48,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_E,  1450+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_E,  1450+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_E,  1450+64,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_E,  1450+64,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_E,  1449+64,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_E,  1449+64,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_E,  1449+64,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_E,  1449+64,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_E,  135+64,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_E,  135+64,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_E,  135+64,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_E,  135+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_E,  1450+64,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_E,  1450+64,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_E,  1451+64,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_E,  1451+64,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_E,  1449+64,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_E,  1449+64,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_E,  1450+64,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_E,  1450+64,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_E,  1450+64,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_E,  1450+64,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_E,  1450+64,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_E,  1450+64,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_E,  1450+64,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_E,  1450+64,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_E,  1450+64,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_E,  1450+64,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_F,  1450+80,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_F,  1450+80,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_F,  1450+80,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_F,  1450+80,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_F,  1449+80,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_F,  1449+80,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_F,  1449+80,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_F,  1449+80,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_F,  135+80,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_F,  135+80,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_F,  135+80,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_F,  135+80,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_F,  1450+80,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_F,  1450+80,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_F,  1451+80,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_F,  1451+80,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_F,  1449+80,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_F,  1449+80,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_F,  1450+80,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_F,  1450+80,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_F,  1450+80,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_F,  1450+80,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_F,  1450+80,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_F,  1450+80,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_F,  1450+80,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_F,  1450+80,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_F,  1450+80,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_F,  1450+80,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_G,  1450+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_G,  1450+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_G,  1450+96,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_G,  1450+96,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_G,  1449+96,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_G,  1449+96,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_G,  1449+96,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_G,  1449+96,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_G,  135+96,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_G,  135+96,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_G,  135+96,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_G,  135+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_G,  1450+96,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_G,  1450+96,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_G,  1451+96,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_G,  1451+96,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_G,  1449+96,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_G,  1449+96,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_G,  1450+96,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_G,  1450+96,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_G,  1450+96,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_G,  1450+96,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_G,  1450+96,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_G,  1450+96,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_G,  1450+96,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_G,  1450+96,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_G,  1450+96,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_G,  1450+96,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x8301, 2,  D_POS_H,  1450+112,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8302,  2,  D_POS_H,  1450+112,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8303,  2,  D_POS_H,  1450+112,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8304,  2,  D_POS_H,  1450+112,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8305,  2,  D_POS_H,  1449+112,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8306,  2,  D_POS_H,  1449+112,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8307,  2,  D_POS_H,  1449+112,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8308,  2,  D_POS_H,  1449+112,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x8309,  3,  D_POS_H,  135+112,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830A,  3,  D_POS_H,  135+112,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830B,  3,  D_POS_H,  135+112,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
//    {0x830C,  3,  D_POS_H,  135+112,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830D,  2,  D_POS_H,  1450+112,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830E,  2,  D_POS_H,  1450+112,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x830F,  2,  D_POS_H,  1451+112,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8311,  2,  D_POS_H,  1451+112,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8312,  2,  D_POS_H,  1449+112,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8313,  2,  D_POS_H,  1449+112,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8314,  2,  D_POS_H,  1450+112,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8315,  2,  D_POS_H,  1450+112,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8316,  2,  D_POS_H,  1450+112,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8317,  2,  D_POS_H,  1450+112,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8318,  2,  D_POS_H,  1450+112,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x8319,  2,  D_POS_H,  1450+112,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831A,  2,  D_POS_H,  1450+112,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831B,  2,  D_POS_H,  1450+112,   bit0,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831C,  2,  D_POS_H,  1450+112,   bit15,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },
    {0x831D,  2,  D_POS_H,  1450+112,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_HVAC    },

    {0x9301,  1,  D_POS_A, 3422,   bit7,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9302,  1,  D_POS_A, 3422,   bit6,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9303,  2,  D_POS_A, 3422,   bit5,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9304,  1,  D_POS_H, 3422,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9305,  1,  D_POS_H, 3422,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9306,  2,  D_POS_H, 3422,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
//    {0x9307,  3,  D_POS_E, 151,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
//    {0x9308,  3,  D_POS_F, 151,   bit8,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9311,  1,  D_POS_A, 3423,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9312,  1,  D_POS_A, 3423,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9313,  3,  D_POS_A, 3423,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9314,  3,  D_POS_A, 3423,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9315,  3,  D_POS_A, 3423,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9316,  3,  D_POS_A, 3423,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9317,  2,  D_POS_A, 3423,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9318,  2,  D_POS_A, 3423,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9319,  2,  D_POS_A, 3423,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x931A,  2,  D_POS_A, 3423,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x931B,  2,  D_POS_A, 3423,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x931C,  2,  D_POS_A, 3423,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x931D,  2,  D_POS_A, 3423,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x931E,  2,  D_POS_A, 3423,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },

    {0x9321,  1,  D_POS_B, 3424,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9322,  1,  D_POS_B, 3424,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9323,  2,  D_POS_B, 3424,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9324,  2,  D_POS_B, 3424,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9325,  2,  D_POS_B, 3424,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9326,  2,  D_POS_B, 3424,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9327,  2,  D_POS_B, 3424,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9328,  2,  D_POS_B, 3424,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9329,  2,  D_POS_B, 3424,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x932A,  2,  D_POS_B, 3424,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x932B,  2,  D_POS_B, 3424,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x932C,  2,  D_POS_B, 3424,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x932D,  2,  D_POS_B, 3424,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x932E,  2,  D_POS_B, 3424,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9331,  1,  D_POS_C, 3425,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9332,  1,  D_POS_C, 3425,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9333,  3,  D_POS_C, 3425,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9334,  3,  D_POS_C, 3425,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9335,  3,  D_POS_C, 3425,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9336,  3,  D_POS_C, 3425,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9337,  2,  D_POS_C, 3425,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9338,  2,  D_POS_C, 3425,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9339,  2,  D_POS_C, 3425,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x933A,  2,  D_POS_C, 3425,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x933B,  2,  D_POS_C, 3425,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x933C,  2,  D_POS_C, 3425,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x933D,  2,  D_POS_C, 3425,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x933E,  2,  D_POS_C, 3425,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9341,  1,  D_POS_D, 3426,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9342,  1,  D_POS_D, 3426,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9343,  3,  D_POS_D, 3426,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9344,  3,  D_POS_D, 3426,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9345,  3,  D_POS_D, 3426,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9346,  3,  D_POS_D, 3426,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9347,  2,  D_POS_D, 3426,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9348,  2,  D_POS_D, 3426,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9349,  2,  D_POS_D, 3426,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x934A,  2,  D_POS_D, 3426,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x934B,  2,  D_POS_D, 3426,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x934C,  2,  D_POS_D, 3426,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x934D,  2,  D_POS_D, 3426,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x934E,  2,  D_POS_D, 3426,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9351,  1,  D_POS_E, 3427,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9352,  1,  D_POS_E, 3427,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9353,  3,  D_POS_E, 3427,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9354,  3,  D_POS_E, 3427,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9355,  3,  D_POS_E, 3427,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9356,  3,  D_POS_E, 3427,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9357,  2,  D_POS_E, 3427,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9358,  2,  D_POS_E, 3427,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9359,  2,  D_POS_E, 3427,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x935A,  2,  D_POS_E, 3427,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x935B,  2,  D_POS_E, 3427,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x935C,  2,  D_POS_E, 3427,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x935D,  2,  D_POS_E, 3427,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x935E,  2,  D_POS_E, 3427,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9361,  1,  D_POS_F, 3428,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9362,  1,  D_POS_F, 3428,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9363,  3,  D_POS_F, 3428,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9364,  3,  D_POS_F, 3428,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9365,  3,  D_POS_F, 3428,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9366,  3,  D_POS_F, 3428,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9367,  2,  D_POS_F, 3428,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9368,  2,  D_POS_F, 3428,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9369,  2,  D_POS_F, 3428,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x936A,  2,  D_POS_F, 3428,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x936B,  2,  D_POS_F, 3428,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x936C,  2,  D_POS_F, 3428,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x936D,  2,  D_POS_F, 3428,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x936E,  2,  D_POS_F, 3428,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9371,  1,  D_POS_G, 3429,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9372,  1,  D_POS_G, 3429,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9373,  3,  D_POS_G, 3429,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9374,  3,  D_POS_G, 3429,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9375,  3,  D_POS_G, 3429,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9376,  3,  D_POS_G, 3429,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9377,  2,  D_POS_G, 3429,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9378,  2,  D_POS_G, 3429,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9379,  2,  D_POS_G, 3429,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x937A,  2,  D_POS_G, 3429,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x937B,  2,  D_POS_G, 3429,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x937C,  2,  D_POS_G, 3429,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x937D,  2,  D_POS_G, 3429,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x937E,  2,  D_POS_G, 3429,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9381,  1,  D_POS_H, 3430,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9382,  1,  D_POS_H, 3430,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9383,  3,  D_POS_H, 3430,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9384,  3,  D_POS_H, 3430,   bit4,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9385,  3,  D_POS_H, 3430,   bit3,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    // {0x9386,  3,  D_POS_H, 3430,   bit2,   false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9387,  2,  D_POS_H, 3430,   bit15,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9388,  2,  D_POS_H, 3430,   bit14,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x9389,  2,  D_POS_H, 3430,   bit13,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x938A,  2,  D_POS_H, 3430,   bit12,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x938B,  2,  D_POS_H, 3430,   bit11,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x938C,  2,  D_POS_H, 3430,   bit10,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x938D,  2,  D_POS_H, 3430,   bit9,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },
    {0x938E,  2,  D_POS_H, 3430,   bit8,  false,  false, false,  E_FAULTS_CATEGORY_PIS    },

    {0xA201,  2,  D_POS_H, 1667,   bit7,   false,  false, false,  E_FAULTS_CATEGORY_ATC    },
    {0xA301,  3,  D_POS_H, 1667,   bit6,   false,  false, false,  E_FAULTS_CATEGORY_ATC    },

    {0xB101,  1,  D_POS_A, 3449,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB201,  2,  D_POS_A, 3449,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB102,  1,  D_POS_A, 3449,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB202,  2,  D_POS_A, 3449,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB103,  1,  D_POS_A, 3449,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB203,  2,  D_POS_A, 3449,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB104,  1,  D_POS_A, 3449,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB204,  2,  D_POS_A, 3449,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },


    {0xB105,  1,  D_POS_A, 3450,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB205,  2,  D_POS_A, 3450,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB106,  1,  D_POS_A, 3450,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB206,  2,  D_POS_A, 3450,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB107,  1,  D_POS_B, 3450,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB207,  2,  D_POS_B, 3450,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB108,  1,  D_POS_B, 3450,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB208,  2,  D_POS_B, 3450,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB109,  1,  D_POS_B, 3451,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB209,  2,  D_POS_B, 3451,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB110,  1,  D_POS_B, 3451,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB210,  2,  D_POS_B, 3451,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB111,  1,  D_POS_B, 3451,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB211,  2,  D_POS_B, 3451,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB112,  1,  D_POS_C, 3451,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB212,  2,  D_POS_C, 3451,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB113,  1,  D_POS_C, 3452,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB213,  2,  D_POS_C, 3452,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB114,  1,  D_POS_C, 3452,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB214,  2,  D_POS_C, 3452,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB115,  1,  D_POS_C, 3452,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB215,  2,  D_POS_C, 3452,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB116,  1,  D_POS_C, 3452,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB216,  2,  D_POS_C, 3452,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB117,  1,  D_POS_D, 3453,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB217,  2,  D_POS_D, 3453,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB118,  1,  D_POS_D, 3453,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB218,  2,  D_POS_D, 3453,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB119,  1,  D_POS_D, 3453,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB219,  2,  D_POS_D, 3453,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB120,  1,  D_POS_D, 3453,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB220,  2,  D_POS_D, 3453,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB121,  1,  D_POS_D, 3454,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB221,  2,  D_POS_D, 3454,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB122,  1,  D_POS_E, 3454,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB222,  2,  D_POS_E, 3454,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB123,  1,  D_POS_E, 3454,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB223,  2,  D_POS_E, 3454,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB124,  1,  D_POS_E, 3454,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB224,  2,  D_POS_E, 3454,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB125,  1,  D_POS_E, 3455,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB225,  2,  D_POS_E, 3455,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB126,  1,  D_POS_E, 3455,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB226,  2,  D_POS_E, 3455,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB127,  1,  D_POS_F, 3455,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB227,  2,  D_POS_F, 3455,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB128,  1,  D_POS_F, 3455,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB228,  2,  D_POS_F, 3455,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB129,  1,  D_POS_F, 3456,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB229,  2,  D_POS_F, 3456,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB130,  1,  D_POS_F, 3456,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB230,  2,  D_POS_F, 3456,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB131,  1,  D_POS_F, 3456,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB231,  2,  D_POS_F, 3456,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB132,  1,  D_POS_G, 3456,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB232,  2,  D_POS_G, 3456,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB133,  1,  D_POS_G, 3457,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB233,  2,  D_POS_G, 3457,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB134,  1,  D_POS_G, 3457,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB234,  2,  D_POS_G, 3457,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB135,  1,  D_POS_G, 3457,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB235,  2,  D_POS_G, 3457,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB136,  1,  D_POS_G, 3457,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB236,  2,  D_POS_G, 3457,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB137,  1,  D_POS_H, 3458,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB237,  2,  D_POS_H, 3458,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB138,  1,  D_POS_H, 3458,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB238,  2,  D_POS_H, 3458,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB139,  1,  D_POS_H, 3458,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB239,  2,  D_POS_H, 3458,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB140,  1,  D_POS_H, 3458,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB240,  2,  D_POS_H, 3458,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB141,  1,  D_POS_H, 3459,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB241,  2,  D_POS_H, 3459,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB142,  1,  D_POS_H, 3459,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB242,  2,  D_POS_H, 3459,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB143,  1,  D_POS_A, 3459,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB243,  2,  D_POS_A, 3459,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB144,  1,  D_POS_B, 3459,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB244,  2,  D_POS_B, 3459,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB145,  1,  D_POS_C, 3460,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB245,  2,  D_POS_C, 3460,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB146,  1,  D_POS_D, 3460,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB246,  2,  D_POS_D, 3460,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB147,  1,  D_POS_E, 3460,   bit14,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB247,  2,  D_POS_E, 3460,   bit13,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB148,  1,  D_POS_F, 3460,   bit10,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB248,  2,  D_POS_F, 3460,   bit9,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    {0xB149,  1,  D_POS_G, 3461,   bit6,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB249,  2,  D_POS_G, 3461,   bit5,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB150,  1,  D_POS_H, 3461,   bit2,   false,  false, true,  E_FAULTS_CATEGORY_FAS    },
    {0xB250,  2,  D_POS_H, 3461,   bit1,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    //???????????????????????????????????????????????????????????????????????????????????????
    {0xB251,  2,  D_POS_A, 3461,   bit14,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB252,  2,  D_POS_A, 3461,   bit12,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB253,  2,  D_POS_A, 3461,   bit10,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },
    {0xB254,  2,  D_POS_A, 3461,   bit11,   false,  false, false,  E_FAULTS_CATEGORY_FAS    },

    // added by Deng Ran on the 21st of August 2017.
    {0xC201, 2, D_POS_A, 3800, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC202, 2, D_POS_A, 3800, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC203, 2, D_POS_A, 3800, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC204, 2, D_POS_A, 3800, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC205, 2, D_POS_B, 3800, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC206, 2, D_POS_B, 3800, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC207, 2, D_POS_B, 3800, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC208, 2, D_POS_B, 3800, bit7, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC209, 2, D_POS_C, 3800, bit8, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC210, 2, D_POS_C, 3800, bit9, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC211, 2, D_POS_C, 3800, bit10, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC212, 2, D_POS_C, 3800, bit11, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC213, 2, D_POS_D, 3800, bit12, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC214, 2, D_POS_D, 3800, bit13, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC215, 2, D_POS_D, 3800, bit14, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC216, 2, D_POS_D, 3800, bit15, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC217, 2, D_POS_E, 3801, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC218, 2, D_POS_E, 3801, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC219, 2, D_POS_E, 3801, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC220, 2, D_POS_E, 3801, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC221, 2, D_POS_F, 3801, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC222, 2, D_POS_F, 3801, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC223, 2, D_POS_F, 3801, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC224, 2, D_POS_F, 3801, bit7, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC225, 2, D_POS_G, 3801, bit8, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC226, 2, D_POS_G, 3801, bit9, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC227, 2, D_POS_G, 3801, bit10, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC228, 2, D_POS_G, 3801, bit11, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC229, 2, D_POS_H, 3801, bit12, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC230, 2, D_POS_H, 3801, bit13, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC231, 2, D_POS_H, 3801, bit14, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC232, 2, D_POS_H, 3801, bit15, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    // deleted by Deng Ran on the 21st of August 2017.
    {0xC301, 2, D_POS_A, 3802, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC302, 2, D_POS_A, 3802, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC303, 2, D_POS_A, 3803, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC304, 2, D_POS_A, 3803, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC305, 2, D_POS_A, 3803, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC306, 2, D_POS_A, 3803, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC307, 2, D_POS_A, 3803, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC308, 2, D_POS_A, 3803, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC309, 2, D_POS_A, 3803, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC310, 2, D_POS_B, 3804, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC311, 2, D_POS_B, 3804, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC312, 2, D_POS_B, 3804, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC313, 2, D_POS_B, 3804, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC314, 2, D_POS_B, 3804, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC315, 2, D_POS_B, 3804, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC316, 2, D_POS_B, 3804, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC317, 2, D_POS_C, 3805, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC318, 2, D_POS_C, 3805, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC319, 2, D_POS_C, 3805, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC320, 2, D_POS_C, 3805, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC321, 2, D_POS_C, 3805, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC322, 2, D_POS_C, 3805, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC323, 2, D_POS_C, 3805, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC324, 2, D_POS_D, 3806, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC325, 2, D_POS_D, 3806, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC326, 2, D_POS_D, 3806, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC327, 2, D_POS_D, 3806, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC328, 2, D_POS_D, 3806, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC329, 2, D_POS_D, 3806, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC330, 2, D_POS_D, 3806, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC331, 2, D_POS_E, 3807, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC332, 2, D_POS_E, 3807, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC333, 2, D_POS_E, 3807, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC334, 2, D_POS_E, 3807, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC335, 2, D_POS_E, 3807, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC336, 2, D_POS_E, 3807, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC337, 2, D_POS_E, 3807, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC338, 2, D_POS_F, 3808, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC339, 2, D_POS_F, 3808, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC340, 2, D_POS_F, 3808, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC341, 2, D_POS_F, 3808, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC342, 2, D_POS_F, 3808, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC343, 2, D_POS_F, 3808, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC344, 2, D_POS_F, 3808, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC345, 2, D_POS_G, 3809, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC346, 2, D_POS_G, 3809, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC347, 2, D_POS_G, 3809, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC348, 2, D_POS_G, 3809, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC349, 2, D_POS_G, 3809, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC350, 2, D_POS_G, 3809, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC351, 2, D_POS_G, 3809, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    {0xC352, 2, D_POS_H, 3810, bit0, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC353, 2, D_POS_H, 3810, bit1, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC354, 2, D_POS_H, 3810, bit2, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC355, 2, D_POS_H, 3810, bit3, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC356, 2, D_POS_H, 3810, bit4, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC357, 2, D_POS_H, 3810, bit5, false, false, false, E_FAULTS_CATEGORY_RSDFS},
    {0xC358, 2, D_POS_H, 3810, bit6, false, false, false, E_FAULTS_CATEGORY_RSDFS},

    // the fault list of pms
    {0xD101, 2, D_POS_B, 3820, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC102, 2, D_POS_B, 3820, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC103, 2, D_POS_B, 3820, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC201, 2, D_POS_B, 3820, bit3, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC301, 2, D_POS_B, 3820, bit4, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC302, 2, D_POS_B, 3820, bit5, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC303, 2, D_POS_B, 3820, bit6, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC304, 2, D_POS_B, 3820, bit7, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC305, 2, D_POS_B, 3820, bit8, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC316, 2, D_POS_B, 3820, bit9, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC326, 2, D_POS_B, 3820, bit10, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC336, 2, D_POS_B, 3820, bit11, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC346, 2, D_POS_B, 3820, bit12, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC356, 2, D_POS_B, 3820, bit13, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC366, 2, D_POS_B, 3820, bit14, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC376, 2, D_POS_B, 3820, bit15, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC386, 2, D_POS_B, 3821, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC307, 2, D_POS_B, 3821, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC308, 2, D_POS_B, 3821, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},

    {0xD101, 2, D_POS_D, 3822, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC102, 2, D_POS_D, 3822, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC103, 2, D_POS_D, 3822, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC201, 2, D_POS_D, 3822, bit3, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC301, 2, D_POS_D, 3822, bit4, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC302, 2, D_POS_D, 3822, bit5, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC303, 2, D_POS_D, 3822, bit6, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC304, 2, D_POS_D, 3822, bit7, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC305, 2, D_POS_D, 3822, bit8, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC316, 2, D_POS_D, 3822, bit9, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC326, 2, D_POS_D, 3822, bit10, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC336, 2, D_POS_D, 3822, bit11, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC346, 2, D_POS_D, 3822, bit12, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC356, 2, D_POS_D, 3822, bit13, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC366, 2, D_POS_D, 3822, bit14, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC376, 2, D_POS_D, 3822, bit15, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC386, 2, D_POS_D, 3823, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC307, 2, D_POS_D, 3823, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC308, 2, D_POS_D, 3823, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},

    {0xD101, 2, D_POS_G, 3824, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC102, 2, D_POS_G, 3824, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC103, 2, D_POS_G, 3824, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC201, 2, D_POS_G, 3824, bit3, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC301, 2, D_POS_G, 3824, bit4, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC302, 2, D_POS_G, 3824, bit5, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC303, 2, D_POS_G, 3824, bit6, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC304, 2, D_POS_G, 3824, bit7, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC305, 2, D_POS_G, 3824, bit8, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC316, 2, D_POS_G, 3824, bit9, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC326, 2, D_POS_G, 3824, bit10, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC336, 2, D_POS_G, 3824, bit11, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC346, 2, D_POS_G, 3824, bit12, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC356, 2, D_POS_G, 3824, bit13, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC366, 2, D_POS_G, 3824, bit14, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC376, 2, D_POS_G, 3824, bit15, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC386, 2, D_POS_G, 3825, bit0, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC307, 2, D_POS_G, 3825, bit1, false, false, false, E_FAULTS_CATEGORY_PMS},
    {0xC308, 2, D_POS_G, 3825, bit2, false, false, false, E_FAULTS_CATEGORY_PMS},
};

int g_faultsRomLen = sizeof(g_faultsrom)/sizeof(FAULTS_ROM_DATA);


bool FaultsVerdict(FAULTS_ROM_DATA *pdata)
{
    if ((pdata->code >= 0x1200) && (pdata->code <= 0x13FF))
    {
        if (0x1301 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_gw123_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_gw123_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_gw123_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_gw123_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_gw123_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_gw123_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_gw123_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_gw123_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1302 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_di1_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_di1_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_di1_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_di1_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_di1_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_di1_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_di1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_di1_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1303 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_di2_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_di2_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_di2_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_di2_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_di2_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_di2_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_di2_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_di2_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1304 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_di3_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_di3_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_di3_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_di3_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_di3_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_di3_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_di3_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_di3_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1305 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_di4_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_di4_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_di4_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_di4_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_di4_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_di4_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_di4_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_di4_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1306 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_do1_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_do1_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_do1_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_do1_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_do1_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_do1_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_do1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_do1_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1307 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_do2_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_do2_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_do2_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_do2_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_do2_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_do2_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_do2_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_do2_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1308 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_riom1_ai1_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_riom2_ai1_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_riom3_ai1_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_riom4_ai1_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_riom5_ai1_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_riom6_ai1_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_riom7_ai1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_riom8_ai1_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1201 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_485_comm_err_flg1&&g_udp_comm_err_flg1)
                || ((D_POS_H == pdata->pos) && g_485_comm_err_flg2&&g_udp_comm_err_flg2))
            {
                return true;
            }
        }
        else if (0x120B == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_485_comm_err_flg1&& (g_udp_comm_err_flg1==0)&&Bit(g_dataBuffer_UDP[2122], 16 )&&Bit(g_dataBuffer_UDP[2123], 8 )&&Bit(g_dataBuffer_UDP[2123], 16 )&&Bit(g_dataBuffer_UDP[2124], 8 )&&Bit(g_dataBuffer_UDP[2124], 16 )&&Bit(g_dataBuffer_UDP[2125], 8 )&&Bit(g_dataBuffer_UDP[2125], 16 )&&Bit(g_dataBuffer_UDP[2126], 8 ))
             || ((D_POS_F == pdata->pos) && g_485_comm_err_flg2&& (g_udp_comm_err_flg2==0)&&Bit(g_dataBuffer_UDP[2122], 16 )&&Bit(g_dataBuffer_UDP[2123], 8 )&&Bit(g_dataBuffer_UDP[2123], 16 )&&Bit(g_dataBuffer_UDP[2124], 8 )&&Bit(g_dataBuffer_UDP[2124], 16 )&&Bit(g_dataBuffer_UDP[2125], 8 )&&Bit(g_dataBuffer_UDP[2125], 16 )&&Bit(g_dataBuffer_UDP[2126], 8 )))
            {
                return true;
            }
        }
        else if (0x1202 == pdata->code)
        {
            if (((D_POS_B == pdata->pos) && g_tcu1_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_tcu2_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_tcu3_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_tcu4_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_tcu5_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_tcu6_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1203 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_acu1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_acu2_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1204 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_bcu1_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_bcu2_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_bcu3_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_bcu4_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1205 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_door1_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_door2_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_door3_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_door4_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_door5_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_door6_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_door7_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_door8_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1206 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_hvac1_comm_err_flg)
                || ((D_POS_B == pdata->pos) && g_hvac2_comm_err_flg)
                || ((D_POS_C == pdata->pos) && g_hvac3_comm_err_flg)
                || ((D_POS_D == pdata->pos) && g_hvac4_comm_err_flg)
                || ((D_POS_E == pdata->pos) && g_hvac5_comm_err_flg)
                || ((D_POS_F == pdata->pos) && g_hvac6_comm_err_flg)
                || ((D_POS_G == pdata->pos) && g_hvac7_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_hvac8_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1207 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_pis1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_pis2_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1208 == pdata->code)
        {
            if (((D_POS_H == pdata->pos) && g_atc1_comm_err_flg))
            {
                return true;
            }
        }
        else if (0x1209 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_fas1_comm_err_flg)
                || ((D_POS_H == pdata->pos) && g_fas2_comm_err_flg))
            {
                return true;
            }
        }

        else if (0x1210 == pdata->code)
        {
            if (((D_POS_H == pdata->pos) && g_CCU2_comm_err_flg&&(g_CCU1_comm_err_flg==0)))
            {
                return true;
            }
        }

        else if (0x1211 == pdata->code)
        {
            if (((D_POS_A == pdata->pos) && g_CCU1_comm_err_flg&&(g_CCU2_comm_err_flg==0)))
            {
                return true;
            }
        }
    }
//    else if((0x4204 == pdata->code)||(0x4205 == pdata->code) )//
//    {
//        if(pdata->word==3063)
//        {
//            if ( Bit(CCU_HMI_222_9, 12 )|| Bit(CCU_HMI_222_9, 11 ) )
//            {
//                if (0 == (g_dataBuffer[pdata->word] & pdata->bit))
//                {
//                    return true;
//                }
//            }

//        }

//        if(pdata->word==3143)
//        {
//            if (Bit(CCU_HMI_222_9, 10 ) || Bit(CCU_HMI_222_9, 9 ) )
//            {
//                if (0 == (g_dataBuffer[pdata->word] & pdata->bit))
//                {
//                    return true;
//                }
//            }
//        }



//    }
    else if (0 != (g_dataBuffer[pdata->word] & pdata->bit))
    {
        return true;
    }

    return false;
}

void AddNewFaultRecordToHistoryList(ST_HISTORY_FAULT_INFO &newinfo)
{
    if (g_historyFaultsList.curIdx < D_HISTORY_FAULT_LIST_MAX_CNT)
    {
        g_historyFaultsList.curIdx += 1;
    }
    else
    {
        g_historyFaultsList.curIdx = 1;
    }

    CheckIndexRange(g_historyFaultsList.curIdx, __LINE__);

    g_historyFaultsList.list[g_historyFaultsList.curIdx] = newinfo;

    if (g_historyFaultsList.cnt < D_HISTORY_FAULT_LIST_MAX_CNT)
    {
        g_historyFaultsList.cnt += 1;
    }

    CheckIndexRange(g_historyFaultsList.cnt, __LINE__);
}

int GetHistoryFaultsListCount()
{
    return g_historyFaultsList.cnt;
}

ST_HISTORY_FAULT_INFO * GetHistoryFaultInfoAt(int num)
{
    ASSERT(num <= D_HISTORY_FAULT_LIST_MAX_CNT);

    ST_HISTORY_FAULT_INFO *pdata = NULL;

    int i;
    int index = g_historyFaultsList.curIdx;

    CheckIndexRange(g_historyFaultsList.cnt, __LINE__);

    if(index < 1)
        index = g_historyFaultsList.cnt;

    for (i = 0; i < num; i++)
    {
        if (1 >= index)
        {
            index = g_historyFaultsList.cnt;
        }
        else
        {
            index -= 1;
        }
    }

    CheckIndexRange(index, __LINE__);

    pdata = &g_historyFaultsList.list[index];

    return pdata;
}

void HistoryFaultsLoad()
{
    QString appPath = QApplication::applicationDirPath();
    QString fName = appPath + "/record/FaultsHistory.dat";

    fstream fs;
    fs.open(fName.toStdString().c_str(), ios_base::in);
    if (!fs.is_open())
    {
        return ;
    }
    fs.read((char*)&g_historyFaultsList, sizeof(g_historyFaultsList));

    fs.close();
}

QString HistoryFaultsOutput()
{
    QString appPath = QApplication::applicationDirPath();
    QString fName = appPath + "/record/FaultsHistory.dat";

    fstream fs;
    fs.open(fName.toStdString().c_str(), ios_base::out);
    if (!fs.is_open())
    {
        return "";
    }

    fs.write((char*)&g_historyFaultsList, sizeof(g_historyFaultsList));

    fs.close();

    return fName;
}

void SearchAndSaveEndDateTime(int idx, QDateTime &datetime)
{
    ST_HISTORY_FAULT_INFO *pdata;
    int i = 0;
    int historyCnt = GetHistoryFaultsListCount();
    int curIndex = g_historyFaultsList.curIdx;

    CheckIndexRange(curIndex, __LINE__);
    CheckIndexRange(historyCnt, __LINE__);

    pdata = &g_historyFaultsList.list[curIndex];

    for (i=0; i<historyCnt; i++)
    {
        if ((idx == pdata->romIdx) && !(pdata->isEnd))
        {
            pdata->isEnd = true;
            pdata->end_datetime.year = datetime.date().year();
            pdata->end_datetime.month = datetime.date().month();
            pdata->end_datetime.day = datetime.date().day();
            pdata->end_datetime.hour = datetime.time().hour();
            pdata->end_datetime.minute = datetime.time().minute();
            pdata->end_datetime.second = datetime.time().second();
            break;
        }
        if (1 >= curIndex)
        {
            curIndex = historyCnt;

            CheckIndexRange(curIndex, __LINE__);

            pdata = &g_historyFaultsList.list[curIndex];
        }
        else
        {
            pdata--;
            curIndex--;
        }
    }
}

int FaultsScanning()
{
    int ret = -1;
    int i;
    FAULTS_ROM_DATA *pdata = &g_faultsrom[0];
    bool found = false;
    QDateTime datetime = QDateTime::currentDateTime();
    int realtimefaultscount = 0;
    ST_HISTORY_FAULT_INFO newinfo;

    for (i=0; i<g_faultsRomLen; i++)
    {
        if (FaultsVerdict(pdata))
        {
            if (pdata->flg)
            {   // if it's already exist
                // then leave it alone
            }
            else
            {

                //                if (!AntiShakingProcess(i, true))
                //                {
                //                    pdata++;
                //                    continue;
                //                }
                pdata->flg = true;
                pdata->confirm = false;
                // a new fault occurs
                // create a fault record
                newinfo.romIdx = i;
                newinfo.start_datetime.year = datetime.date().year();
                newinfo.start_datetime.month = datetime.date().month();
                newinfo.start_datetime.day = datetime.date().day();
                newinfo.start_datetime.hour = datetime.time().hour();
                newinfo.start_datetime.minute = datetime.time().minute();
                newinfo.start_datetime.second = datetime.time().second();
                newinfo.isEnd = false;

                AddNewFaultRecordToHistoryList(newinfo);

                // if "found" is true, faults history file saving is needed when the scanning is finished!
                found = true;

                //add fault to real time list
                ST_REALTIME_FAULT_INFO realtimeFault;
                realtimeFault.nRomIndex = i;
                realtimeFault.start_datetime = newinfo.start_datetime;
                g_realtimeFaultsList.push_front(realtimeFault);
                //g_realtime_faults_datetime_array[i] = newinfo.start_datetime;

                if(g_bScannFault)
                {
                    //show real time fault page
                    if((pdata->level == 1 || pdata->level == 2)
                        && CGlobal::m_nCurPageIndex != PAGE_INDEX_REALTIMEFAULT)
                    {
                        if(pdata->code != 0x120A && pdata->code != 0x120B)
                        {
                            g_backtoprepage = false;
                            SetFaultType(E_FAULTS_TYPE_REALTIME);
                            CPage* pPage = g_PageVec[CGlobal::m_nCurPageIndex];
                            if (pPage == NULL)   return false;
              //              pPage->ChangePage(PAGE_INDEX_REALTIMEFAULT);
                        }
                    }
                }
            }
            if ((1 == pdata->level) || (2 == pdata->level))
            {
                realtimefaultscount += 1;
                if (-1 == ret)
                {
                    ret = i;
                }
            }
        }
        else
        {
            if (pdata->flg)
            {   // fault disapear
//                if (!AntiShakingProcess(i, false))
//                {
//                    pdata++;
//                    continue;
//                }
                pdata->flg = false;
                pdata->confirm = false;
                // search in the history list and if found, mark it end...
                SearchAndSaveEndDateTime(i, datetime);

                found = true;
                //remove fault from real time list
                for(int ii = 0; ii < g_realtimeFaultsList.size(); ii++)
                {
                    if(g_realtimeFaultsList[ii].nRomIndex == i)
                    {
                        g_realtimeFaultsList.removeAt(ii);
                        break;
                    }
                }
            }
        }
        pdata++;
    }
    if (found)
    {
        HistoryFaultsOutput();
    }
    g_RealTimeFaultsNum = realtimefaultscount;

    return ret;
}

void SetFaultType(E_FAULTS_TYPE type)
{
    g_fault_type = type;
    switch (type)
    {
    case E_FAULTS_TYPE_HISTORY:
        g_subSystemFaultsTitle = QSTR("历史故障");
        break;
    case E_FAULTS_TYPE_TODAY:
        g_subSystemFaultsTitle = QSTR("今日故障");
        break;
    case E_FAULTS_TYPE_REALTIME:
        g_subSystemFaultsTitle = QSTR("实时故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_ALL;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
//    case E_FAULTS_TYPE_LEVEL3:
//        g_subSystemFaultsTitle = QSTR("三级故障");
//        break;
    case E_FAULTS_TYPE_CAB:
        g_subSystemFaultsTitle = QSTR("司机室故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_CAB;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_ACU:
        g_subSystemFaultsTitle = QSTR("辅助系统故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_ACU;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_BCU:
        g_subSystemFaultsTitle = QSTR("制动装置故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_BCU;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_TCU:
        g_subSystemFaultsTitle = QSTR("牵引系统故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_TCU;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_HVAC:
        g_subSystemFaultsTitle = QSTR("空调设置故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_HVAC;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_ATC:
        g_subSystemFaultsTitle = QSTR("ATC故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_ATC;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_PIS:
        g_subSystemFaultsTitle = QSTR("PIS故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_PIS;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_TCMS:
        g_subSystemFaultsTitle = QSTR("网络故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_TCMS;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_DOOR:
        g_subSystemFaultsTitle = QSTR("门故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_DCU;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_TL:
        g_subSystemFaultsTitle = QSTR("TL故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_TL;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_FAS:
        g_subSystemFaultsTitle = QSTR("烟火故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_FAS;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    case E_FAULTS_TYPE_RESERVE:
        g_subSystemFaultsTitle = QSTR("保留故障");
        g_realTimeConditionFilter.category = E_FAULTS_CATEGORY_RSV;
        g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
        break;
    default:
        ASSERT(false);
        break;
    }
}

QString GetCategoryStr(int iGategory)
{
    QString str = "";
    switch(iGategory)
    {
    case E_FAULTS_CATEGORY_CAB:
        str = "CAB";
        break;
    case E_FAULTS_CATEGORY_ACU:
        str = "ACU";
        break;
    case E_FAULTS_CATEGORY_BCU:
        str = "BCU";
        break;
    case E_FAULTS_CATEGORY_TCU:
        str = "TCU";
        break;
    case E_FAULTS_CATEGORY_HVAC:
        str = "HVAC";
        break;
    case E_FAULTS_CATEGORY_ATC:
        str = "ATC";
        break;
    case E_FAULTS_CATEGORY_PIS:
        str = "PIS";
        break;
    case E_FAULTS_CATEGORY_TCMS:
        str = "TCMS";
        break;
    case E_FAULTS_CATEGORY_DCU:
        str = "DOOR";
        break;
    case E_FAULTS_CATEGORY_TL:
        str = "TL";
        break;
    case E_FAULTS_CATEGORY_FAS:
        str = "FAS";
        break;
    case E_FAULTS_CATEGORY_RSV:
        str = "RESERVE";
        break;
    default:
        str = "-";
        break;
    }

    return str;
}

int FindFaultsNameTableIndex(int code)
{
    int idx = -1;
    int i = 0;
    ST_FAULT_INFO *pdata = &g_faultsinforom[0];
    for (i = 0; i < g_faultsInfoRomLen; i++)
    {
        if (code == pdata->code)
        {
            idx = i;
            break;
        }
        pdata++;
    }
    return idx;
}

void HistoryFaultsListInit()
{
    memset(&g_historyFaultsList, 0, sizeof(g_historyFaultsList));
    g_historyConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;
    g_realTimeConditionFilter.level = D_CONDITION_FILTER_LEVEL_12;

    HistoryFaultsLoad();
    if(g_historyFaultsList.curIdx < 0 || g_historyFaultsList.curIdx > D_HISTORY_FAULT_LIST_MAX_CNT)
    {
        g_historyFaultsList.curIdx = 0;
    }
}

QString GetCarriageString(char position)
{
    QString str = "- ";
    switch (position)
    {
    case D_POS_A:
        str = QSTR("1车 ");
        break;
    case D_POS_B:
        str = QSTR("2车  ");
        break;
    case D_POS_C:
        str = QSTR("3车  ");
        break;
    case D_POS_D:
        str = QSTR("4车  ");
        break;
    case D_POS_E:
        str = QSTR("5车  ");
        break;
    case D_POS_F:
        str = QSTR("6车 ");
        break;
    case D_POS_G:
        str = QSTR("7车 ");
        break;
    case D_POS_H:
        str = QSTR("8车 ");
        break;
    default:
        break;
    }

    return str;
}

void CheckIndexRange(int& index, int linenum)
{
    bool bError = false;
    if(index < 1)
    {
        index = 1;
        bError = true;
    }
    if(index > D_HISTORY_FAULT_LIST_MAX_CNT)
    {
        index = D_HISTORY_FAULT_LIST_MAX_CNT;
        bError = true;
    }

#ifdef LOG_OPEN
    if(bError)
    {
       QString writeStr = GetDateStr() + " " + GetTimeStr() + ":RangeError at line " + QString::number(linenum) + "\n";
       fstream fs;
       fs.open((qApp->applicationDirPath().toStdString() + g_logFileName).c_str(), ios_base::out | ios_base::app);
       fs.write(writeStr.toStdString().c_str(), writeStr.length());
       fs.close();
    }
#endif
}
